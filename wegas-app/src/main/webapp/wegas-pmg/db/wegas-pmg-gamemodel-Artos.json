{
    "@class": "GameModel",
    "pages": {},
    "name": "Project Management Game Artos",
    "childVariableDescriptors": [
        {
            "@class": "NumberDescriptor",
            "name": "managementApproval",
            "label": "ManagementApproval",
            "defaultInstance": {
                "@class": "NumberInstance",
                "history": [],
                "value": 100
            },
            "scope": {
                "@class": "TeamScope",
                "broadcastScope": "TeamScope"
            },
            "minValue": 0,
            "maxValue": 200
        },
        {
            "@class": "NumberDescriptor",
            "name": "userApproval",
            "label": "UserApproval",
            "defaultInstance": {
                "@class": "NumberInstance",
                "history": [],
                "value": 100
            },
            "scope": {
                "@class": "TeamScope",
                "broadcastScope": "TeamScope"
            },
            "minValue": 0,
            "maxValue": 200
        },
        {
            "@class": "NumberDescriptor",
            "name": "qualityImpacts",
            "label": "Project Quality",
            "defaultInstance": {
                "@class": "NumberInstance",
                "history": [],
                "value": 0
            },
            "scope": {
                "@class": "TeamScope",
                "broadcastScope": "TeamScope"
            },
            "minValue": 0,
            "maxValue": 200
        },
        {
            "@class": "NumberDescriptor",
            "name": "projectFixedCosts",
            "label": "Project fixed costs",
            "defaultInstance": {
                "@class": "NumberInstance",
                "history": [],
                "value": 0
            },
            "scope": {
                "@class": "TeamScope",
                "broadcastScope": "TeamScope"
            },
            "minValue": null,
            "maxValue": null
        },
        {
            "@class": "InboxDescriptor",
            "name": "inbox",
            "label": "Inbox",
            "defaultInstance": {
                "@class": "InboxInstance",
                "messages": []
            },
            "scope": {
                "@class": "TeamScope",
                "broadcastScope": "TeamScope"
            },
            "description": null
        },
        {
            "@class": "NumberDescriptor",
            "name": "currentPhase",
            "label": "Current phase",
            "defaultInstance": {
                "@class": "NumberInstance",
                "history": [],
                "value": 0
            },
            "scope": {
                "@class": "TeamScope",
                "broadcastScope": "TeamScope"
            },
            "minValue": 0,
            "maxValue": 4
        }, {
            "@class": "ListDescriptor",
            "name": "actions",
            "label": "Actions",
            "defaultInstance": {
                "@class": "NumberInstance",
                "history": [],
                "value": 0
            },
            "scope": {
                "@class": "GameScope",
                "broadcastScope": "TeamScope"
            },
            "items": [
                {
                    "@class": "ListDescriptor",
                    "name": "Actions phase 1",
                    "label": "Actions phase 1",
                    "defaultInstance": {
                        "@class": "NumberInstance",
                        "history": [],
                        "value": 0
                    },
                    "scope": {
                        "@class": "GameScope",
                        "broadcastScope": "PlayerScope"
                    },
                    "items": [
                        {
                            "@class": "QuestionDescriptor",
                            "name": "rencontrerIng_EtCommercial_Dur_eT_ches",
                            "label": "Rencontrer Ing. et commercial : durée tâches",
                            "defaultInstance": {
                                "@class": "QuestionInstance",
                                "replies": [],
                                "active": true,
                                "unread": true
                            },
                            "scope": {
                                "@class": "TeamScope",
                                "broadcastScope": "TeamScope"
                            },
                            "description": "<p>Vous passez un moment avec un ing&eacute;nieur et un responsable commercial pour estimer la dur&eacute;e des diff&eacute;rentes t&acirc;ches n&eacute;cessaires &agrave; la r&eacute;alisation du projet.</p>\n<p>&nbsp;</p>\n<p>Budget temps: 3</p>",
                            "allowMultipleReplies": true,
                            "items": [
                                {
                                    "@class": "ChoiceDescriptor",
                                    "name": "variable_3",
                                    "label": " ",
                                    "defaultInstance": {
                                        "@class": "ChoiceInstance",
                                        "active": true,
                                        "unread": true,
                                        "currentResultIndex": -1
                                    },
                                    "scope": {
                                        "@class": "TeamScope",
                                        "broadcastScope": "TeamScope"
                                    },
                                    "results": [
                                        {
                                            "@class": "Result",
                                            "name": "1. si tâches pas identifiées",
                                            "answer": "<p>Vous constatez rapidement que vous ne pourrez estimer les dur&eacute;es des t&acirc;ches qu'une fois celles-ci identifi&eacute;es.</p>\n<p>&nbsp;</p>\n<p>Vous ne consommez qu'une carte temps, mais n'obtenez pas vraiment de r&eacute;sultat.</p>",
                                            "files": [],
                                            "impact": {
                                                "@class": "Script",
                                                "content": "VariableDescriptorFacade.find(gameModel, \"cardsPhase1\").add(self, -1);",
                                                "language": "JavaScript"
                                            }
                                        },
                                        {
                                            "@class": "Result",
                                            "name": "2. si tâches identifiées",
                                            "answer": "<p>Il est &agrave; ce stade encore difficile d'estimer la dur&eacute;e des t&acirc;ches, mais voici quelques informations.</p>\n<p>- analyse de l'existant : 2 semaines</p>\n<p>- mod&eacute;lisation des donn&eacute;es, traitements, IHM : 3 semaines</p>\n<p>- Programmation : 3 semaines</p>\n<p>- Tests : 1 semaine</p>\n<p>- Mise en oeuvre : 2 semaines</p>",
                                            "files": [],
                                            "impact": {
                                                "@class": "Script",
                                                "content": "VariableDescriptorFacade.find(gameModel, \"cardsPhase1\").add(self, -3);\nVariableDescriptorFacade.find(gameModel, \"variable_3\").setCurrentResult(self, 9. Si déjà fait);",
                                                "language": "JavaScript"
                                            }
                                        },
                                        {
                                            "@class": "Result",
                                            "name": "9. Si déjà fait",
                                            "answer": "<p>&nbsp;</p>\n<p class=\"p1\">Les t&acirc;ches ont d&eacute;j&agrave; &eacute;t&eacute; identifi&eacute;es.</p>\n<p class=\"p1\">&nbsp;</p>\n<p class=\"p1\">Vous ne consommez qu'une carte temps, mais n'obtenez pas de nouveaux r&eacute;sultats.</p>",
                                            "files": [],
                                            "impact": {
                                                "@class": "Script",
                                                "content": "VariableDescriptorFacade.find(gameModel, \"cardsPhase1\").add(self, -1);",
                                                "language": "JavaScript"
                                            }
                                        }
                                    ],
                                    "description": null,
                                    "impact": null,
                                    "duration": 1,
                                    "cost": 0
                                }
                            ],
                            "pictures": []
                        },
                        {
                            "@class": "QuestionDescriptor",
                            "name": "rencontrerIng_EtCommercial_IdentifierT_ches",
                            "label": "Rencontrer Ing. et commercial: identifier tâches",
                            "defaultInstance": {
                                "@class": "QuestionInstance",
                                "replies": [],
                                "active": true,
                                "unread": true
                            },
                            "scope": {
                                "@class": "TeamScope",
                                "broadcastScope": "TeamScope"
                            },
                            "description": "<p>Vous prenez du temps avec un ing&eacute;nieur et un responsable commercial pour identifier sommairement la liste des t&acirc;ches &agrave; effectuer pour r&eacute;aliser ce projet.</p>\n<p>&nbsp;</p>\n<p>Budget temps: 2</p>",
                            "allowMultipleReplies": true,
                            "items": [
                                {
                                    "@class": "ChoiceDescriptor",
                                    "name": "variable",
                                    "label": " ",
                                    "defaultInstance": {
                                        "@class": "ChoiceInstance",
                                        "active": true,
                                        "unread": true,
                                        "currentResultIndex": -1
                                    },
                                    "scope": {
                                        "@class": "TeamScope",
                                        "broadcastScope": "TeamScope"
                                    },
                                    "results": [
                                        {
                                            "@class": "Result",
                                            "name": "1. Réponse de base",
                                            "answer": "<p>Vous vous rendez compte qu'&agrave; ce stade du projet, il est encore difficile de compl&egrave;tement estimer les t&acirc;ches.</p>\n<p>&nbsp;</p>\n<p>Vous avez toutefois obtenu une premi&egrave;re id&eacute;e de ce qui devrait &ecirc;tre r&eacute;alis&eacute;:</p>\n<p>- analyse de l'existant</p>\n<p>- mod&eacute;lisation des donn&eacute;es, traitements, IHM</p>\n<p>- Programmation</p>\n<p>- Tests</p>\n<p>- Mise en oeuvre</p>",
                                            "files": [],
                                            "impact": {
                                                "@class": "Script",
                                                "content": "VariableDescriptorFacade.find(gameModel, \"cardsPhase1\").add(self, -2);\nVariableDescriptorFacade.find(gameModel, \"variable_3\").setCurrentResult(self, 2. si tâches identifiées);\nVariableDescriptorFacade.find(gameModel, \"variable\").setCurrentResult(self, 9. Si déjà effectué);",
                                                "language": "JavaScript"
                                            }
                                        },
                                        {
                                            "@class": "Result",
                                            "name": "9. Si déjà effectué",
                                            "answer": "<p>La liste des t&acirc;che a d&eacute;j&agrave; &eacute;t&eacute; identifi&eacute;e. Il n'y a rien de nouveau depuis la derni&egrave;re fois.</p>\n<p>&nbsp;</p>\n<p>Vous ne consommez qu'une carte temps.</p>",
                                            "files": [],
                                            "impact": {
                                                "@class": "Script",
                                                "content": "VariableDescriptorFacade.find(gameModel, \"cardsPhase1\").add(self, -1);\n",
                                                "language": "JavaScript"
                                            }
                                        }
                                    ],
                                    "description": null,
                                    "impact": null,
                                    "duration": 1,
                                    "cost": 0
                                }
                            ],
                            "pictures": []
                        }
                    ]
                },
                {
                    "@class": "ListDescriptor",
                    "name": "Actions phase 2",
                    "label": "Actions phase 2",
                    "defaultInstance": {
                        "@class": "NumberInstance",
                        "history": [],
                        "value": 0
                    },
                    "scope": {
                        "@class": "GameScope",
                        "broadcastScope": "PlayerScope"
                    },
                    "items": []
                }
            ]
        },
        {
            "@class": "ListDescriptor",
            "name": "questions",
            "label": "Questions",
            "defaultInstance": {
                "@class": "NumberInstance",
                "history": [],
                "value": 0
            },
            "scope": {
                "@class": "GameScope",
                "broadcastScope": "TeamScope"
            },
            "items": [
                {
                    "@class": "ListDescriptor",
                    "name": "questionPhase1",
                    "label": "Question phase 1",
                    "defaultInstance": {
                        "@class": "NumberInstance",
                        "history": [],
                        "value": 0
                    },
                    "scope": {
                        "@class": "GameScope",
                        "broadcastScope": "PlayerScope"
                    },
                    "items": [
                        {
                            "@class": "ListDescriptor",
                            "name": "questionPeriod1",
                            "label": "Question period 1",
                            "defaultInstance": {
                                "@class": "NumberInstance",
                                "history": [],
                                "value": 0
                            },
                            "scope": {
                                "@class": "GameScope",
                                "broadcastScope": "PlayerScope"
                            },
                            "items": [
                                {
                                    "@class": "QuestionDescriptor",
                                    "name": "evaluationDesBesoinsDesMonteurs",
                                    "label": "Evaluation des besoins des monteurs",
                                    "defaultInstance": {
                                        "@class": "QuestionInstance",
                                        "replies": [],
                                        "active": true,
                                        "unread": true
                                    },
                                    "scope": {
                                        "@class": "TeamScope",
                                        "broadcastScope": "TeamScope"
                                    },
                                    "description": "<p class=\"p1\">Souhaitez-vous effectuer une enqu&ecirc;te aupr&egrave;s des monteurs afin de&nbsp;<span style=\"line-height: 1.231;\">parler de leurs besoins relatifs au projet ?</span></p>",
                                    "allowMultipleReplies": false,
                                    "items": [
                                        {
                                            "@class": "SingleResultChoiceDescriptor",
                                            "name": "a_Rencontrer",
                                            "label": "a) rencontrer",
                                            "defaultInstance": {
                                                "@class": "ChoiceInstance",
                                                "active": true,
                                                "unread": true,
                                                "currentResultIndex": -1
                                            },
                                            "scope": {
                                                "@class": "TeamScope",
                                                "broadcastScope": "TeamScope"
                                            },
                                            "results": [
                                                {
                                                    "@class": "Result",
                                                    "name": "",
                                                    "answer": "<p class=\"p1\">D'une mani&egrave;re g&eacute;n&eacute;rale, les monteurs trouvent que le syst&egrave;me propos&eacute;</p>\n<p class=\"p1\">semble r&eacute;pondre &agrave; leurs besoins.</p>\n<p class=\"p1\"><span style=\"line-height: 1.231;\">Toutefois, les monteurs seraient int&eacute;ress&eacute;s &agrave; avoir un syst&egrave;me&nbsp;</span><span style=\"line-height: 1.231;\">permettant de centraliser les informations relatives &agrave; un probl&egrave;me de&nbsp;</span><span style=\"line-height: 1.231;\">montage pour un mod&egrave;le de machine particulier. Ceci permettrait le&nbsp;</span><span style=\"line-height: 1.231;\">partage de la connaissance entre les monteurs r&eacute;partis dans le monde</span></p>\n<p class=\"p1\">entier.</p>\n<p class=\"p1\">La r&eacute;alisation de cette fonctionnalit&eacute; est indispensable et vous l'acceptez&nbsp;<span style=\"line-height: 1.231;\">(ce qui augmentera un peu la dur&eacute;e de la r&eacute;alisation du logiciel).</span></p>\n<p>&nbsp;</p>\n<p class=\"p1\">L'adh&eacute;sion des utilisateurs en est augment&eacute;e.</p>",
                                                    "files": [],
                                                    "impact": {
                                                        "@class": "Script",
                                                        "content": "VariableDescriptorFacade.find(gameModel, \"cardsPhase1\").add(self, -3);\nVariableDescriptorFacade.find(gameModel, \"projectFixedCosts\").add(self, 5000);\nVariableDescriptorFacade.find(gameModel, \"userApproval\").add(self, -6);\nVariableDescriptorFacade.find(gameModel, \"inbox\").sendMessage(self, \"Monteurs\", \"Suite à notre rencontre\", \"<p class=\\\"p1\\\"><span style=\\\"line-height: 1.231;\\\">Bonjour,</span></p>\\n<p class=\\\"p1\\\">&nbsp;</p>\\n<p class=\\\"p1\\\">Juste un mot pour vous remercier du temps consacr&eacute; &agrave; parler de nos</p>\\n<p class=\\\"p1\\\">besoins et attentes relatives au projet.</p>\\n<p class=\\\"p1\\\">Nous avons beaucoup d'attentes face &agrave; ce projet.</p>\\n<p class=\\\"p1\\\">&nbsp;</p>\\n<p class=\\\"p1\\\">Meilleures salutations</p>\", []);",
                                                        "language": "JavaScript"
                                                    }
                                                }
                                            ],
                                            "description": "<p class=\"p1\">Vous rencontrez les monteurs afin de parler de leurs attentes. Vous&nbsp;<span style=\"line-height: 1.231;\">obtiendrez une liste d'informations sur leurs besoins.</span></p>\n<p class=\"p1\">Budget temps: 3</p>\n<p>&nbsp;</p>\n<p class=\"p1\">Co&ucirc;ts: 5000.- (frais fixes du projet)</p>",
                                            "impact": null,
                                            "duration": 1,
                                            "cost": 0
                                        },
                                        {
                                            "@class": "SingleResultChoiceDescriptor",
                                            "name": "b_RencontreBr_ve",
                                            "label": "b) rencontre brève",
                                            "defaultInstance": {
                                                "@class": "ChoiceInstance",
                                                "active": true,
                                                "unread": true,
                                                "currentResultIndex": -1
                                            },
                                            "scope": {
                                                "@class": "TeamScope",
                                                "broadcastScope": "TeamScope"
                                            },
                                            "results": [
                                                {
                                                    "@class": "Result",
                                                    "name": "",
                                                    "answer": "<p class=\"p1\">Les monteurs seraient int&eacute;ress&eacute;s &agrave; avoir un syst&egrave;me permettant de&nbsp;<span style=\"line-height: 1.231;\">centraliser les informations relatives &agrave; un probl&egrave;me de montage pour un&nbsp;</span><span style=\"line-height: 1.231;\">mod&egrave;le de machine particulier.</span></p>\n<p class=\"p1\">La r&eacute;alisation de cette fonctionnalit&eacute; est indispensable et vous&nbsp;<span style=\"line-height: 1.231;\">l'acceptez.</span></p>\n<p class=\"p1\">&nbsp;</p>\n<p class=\"p1\">L'adh&eacute;sion des utilisateurs en est augment&eacute;e.</p>",
                                                    "files": [],
                                                    "impact": {
                                                        "@class": "Script",
                                                        "content": "VariableDescriptorFacade.find(gameModel, \"projectFixedCosts\").add(self, 3000);\nVariableDescriptorFacade.find(gameModel, \"cardsPhase1\").add(self, -1);\nVariableDescriptorFacade.find(gameModel, \"userApproval\").add(self, 3);\nVariableDescriptorFacade.find(gameModel, \"inbox\").sendMessage(self, \"Monteurs\", \"Suite à notre rencontre\", \"<p class=\\\"p1\\\">Bonjour,</p>\\n<p class=\\\"p1\\\">&nbsp;</p>\\n<p class=\\\"p1\\\">Juste un mot pour vous remercier du temps consacr&eacute; &agrave; parler de nos</p>\\n<p class=\\\"p1\\\">besoins et attentes relatives au projet. Nous aurions toutefois souhait&eacute;&nbsp;<span style=\\\"line-height: 1.231;\\\">en parler plus longuement avec vous.</span></p>\\n<p class=\\\"p1\\\">Enfin, dans tous les cas, nous avons beaucoup d'attentes face &agrave; ce</p>\\n<p class=\\\"p1\\\">projet.</p>\\n<p>&nbsp;</p>\\n<p class=\\\"p1\\\">Meilleures salutations</p>\", []);",
                                                        "language": "JavaScript"
                                                    }
                                                }
                                            ],
                                            "description": "<p class=\"p1\">Vous rencontrez bri&egrave;vement les monteurs afin de parler de leurs&nbsp;<span style=\"line-height: 1.231;\">attentes. Vous obtiendrez une liste d'informations sur leurs besoins.</span></p>\n<p class=\"p1\">&nbsp;</p>\n<p class=\"p1\"><span style=\"line-height: 1.231;\">Budget temps: 1</span></p>\n<p class=\"p1\"><span style=\"line-height: 1.231;\">Co&ucirc;ts: 3000.- (frais fixes du projet)</span></p>",
                                            "impact": null,
                                            "duration": 1,
                                            "cost": 0
                                        },
                                        {
                                            "@class": "SingleResultChoiceDescriptor",
                                            "name": "c_Refuser",
                                            "label": "c) refuser",
                                            "defaultInstance": {
                                                "@class": "ChoiceInstance",
                                                "active": true,
                                                "unread": true,
                                                "currentResultIndex": -1
                                            },
                                            "scope": {
                                                "@class": "TeamScope",
                                                "broadcastScope": "TeamScope"
                                            },
                                            "results": [
                                                {
                                                    "@class": "Result",
                                                    "name": "",
                                                    "answer": "<p>En ordre.</p>",
                                                    "files": [],
                                                    "impact": {
                                                        "@class": "Script",
                                                        "content": "VariableDescriptorFacade.find(gameModel, \"userApproval\").add(self, -8);\nVariableDescriptorFacade.find(gameModel, \"inbox\").sendMessage(self, \"Monteurs\", \"Un système pour monteur ?\", \"<p>Bonjour,</p>\\n<p>&nbsp;</p>\\n<p>Nous avons entendu parler de votre projet &agrave; la caf&eacute;t&eacute;ria.</p>\\n<p>&nbsp;</p>\\n<p>Il para&icirc;t que vous pensez d&eacute;velopper un syst&egrave;me d'assistance &agrave; distance pour les monteurs et r&eacute;parateurs. On aurait appr&eacute;ci&eacute; avoir &eacute;t&eacute; inform&eacute; et pu participer &agrave; la d&eacute;finition des fonctionnalit&eacute;s de ce syst&egrave;me.</p>\\n<p>&nbsp;</p>\\n<p>Meilleures salutations</p>\", []);",
                                                        "language": "JavaScript"
                                                    }
                                                }
                                            ],
                                            "description": "<p>Vous ne prenez pas contact avec les monteurs.</p>",
                                            "impact": null,
                                            "duration": 1,
                                            "cost": 0
                                        }
                                    ],
                                    "pictures": []
                                },
                                {
                                    "@class": "QuestionDescriptor",
                                    "name": "pr_sentationPrototypeUtilisateurs",
                                    "label": "Présentation prototype utilisateurs",
                                    "defaultInstance": {
                                        "@class": "QuestionInstance",
                                        "replies": [],
                                        "active": true,
                                        "unread": true
                                    },
                                    "scope": {
                                        "@class": "TeamScope",
                                        "broadcastScope": "TeamScope"
                                    },
                                    "description": "<p>Un ing&eacute;nieur vous fait la proposition suivante :</p>\n<p>&nbsp;</p>\n<p>\"Lors de la r&eacute;alisation du projet, nous pourrions r&eacute;aliser un mini prototype du syst&egrave;me et pr&eacute;senter celui-ci aux futurs utilisateurs. Le prototype se r&eacute;aliserait parall&egrave;lement &agrave; la r&eacute;alisation du dossier de sp&eacute;cification. Ceci permettrait d'obtenir les remarques des futurs utilisateurs sur le syst&egrave;me &agrave; d&eacute;velopper.</p>\n<p>La r&eacute;alisation du prototype demanderait environ 2 semaines de travail &agrave; 2 personnes.</p>\n<p>Qu'en pensez-vous ? \"</p>",
                                    "allowMultipleReplies": false,
                                    "items": [
                                        {
                                            "@class": "SingleResultChoiceDescriptor",
                                            "name": "a_Accepter",
                                            "label": "a) accepter",
                                            "defaultInstance": {
                                                "@class": "ChoiceInstance",
                                                "active": true,
                                                "unread": true,
                                                "currentResultIndex": -1
                                            },
                                            "scope": {
                                                "@class": "TeamScope",
                                                "broadcastScope": "TeamScope"
                                            },
                                            "results": [
                                                {
                                                    "@class": "Result",
                                                    "name": "",
                                                    "answer": "<p>La t&acirc;che \"prototype utilisateur\" a &eacute;t&eacute; ajout&eacute;e au projet. L'adh&eacute;sion des utilisateurs au projet est sensiblement am&eacute;lior&eacute;e.</p>",
                                                    "files": [],
                                                    "impact": {
                                                        "@class": "Script",
                                                        "content": "VariableDescriptorFacade.find(gameModel, \"cardsPhase1\").add(self, -1);\nVariableDescriptorFacade.find(gameModel, \"userApproval\").add(self, 5);",
                                                        "language": "JavaScript"
                                                    }
                                                }
                                            ],
                                            "description": "<p>Vous acceptez cette proposition et devrez donc g&eacute;rer l'activit&eacute; suppl&eacute;mentaire \"prototype utilisateur\" lors de la planification et de la r&eacute;alisation.</p>\n<p>&nbsp;</p>\n<p>Budget temps: 1</p>",
                                            "impact": null,
                                            "duration": 1,
                                            "cost": 0
                                        },
                                        {
                                            "@class": "SingleResultChoiceDescriptor",
                                            "name": "b_Refuser",
                                            "label": "b) refuser",
                                            "defaultInstance": {
                                                "@class": "ChoiceInstance",
                                                "active": true,
                                                "unread": true,
                                                "currentResultIndex": -1
                                            },
                                            "scope": {
                                                "@class": "TeamScope",
                                                "broadcastScope": "TeamScope"
                                            },
                                            "results": [
                                                {
                                                    "@class": "Result",
                                                    "name": "",
                                                    "answer": "<p>En ordre.</p>\n<p>Le projet sera donc r&eacute;alis&eacute; sans pr&eacute;sentation d'un prototype aux utilisateurs. Les futurs utilisateurs l'ont appris et sont un peu d&eacute;&ccedil;us.</p>",
                                                    "files": [],
                                                    "impact": {
                                                        "@class": "Script",
                                                        "content": "VariableDescriptorFacade.find(gameModel, \"userApproval\").add(self, -6);",
                                                        "language": "JavaScript"
                                                    }
                                                }
                                            ],
                                            "description": "<p>Vous r&eacute;pondez que vous pr&eacute;f&eacute;rez ne pas r&eacute;aliser de prototype.</p>",
                                            "impact": null,
                                            "duration": 1,
                                            "cost": 0
                                        }
                                    ],
                                    "pictures": []
                                },
                                {
                                    "@class": "QuestionDescriptor",
                                    "name": "evaluationDesBesoinsDesClients",
                                    "label": "Evaluation des besoins des clients",
                                    "defaultInstance": {
                                        "@class": "QuestionInstance",
                                        "replies": [],
                                        "active": true,
                                        "unread": true
                                    },
                                    "scope": {
                                        "@class": "TeamScope",
                                        "broadcastScope": "TeamScope"
                                    },
                                    "description": "<p>Un responsable commercial vous informe qu'il serait possible de r&eacute;aliser une &eacute;valuation des besoins des clients et de leur int&eacute;r&ecirc;t relatif pour un syst&egrave;me d'assistance &agrave; distance et de formation int&eacute;gr&eacute; aux machines.</p>",
                                    "allowMultipleReplies": false,
                                    "items": [
                                        {
                                            "@class": "SingleResultChoiceDescriptor",
                                            "name": "a_EffectuerL__valuation",
                                            "label": "a) effectuer l'évaluation",
                                            "defaultInstance": {
                                                "@class": "ChoiceInstance",
                                                "active": true,
                                                "unread": true,
                                                "currentResultIndex": -1
                                            },
                                            "scope": {
                                                "@class": "TeamScope",
                                                "broadcastScope": "TeamScope"
                                            },
                                            "results": [
                                                {
                                                    "@class": "Result",
                                                    "name": "",
                                                    "answer": "<p>Les clients semblent tr&egrave;s int&eacute;ress&eacute;s par ce syst&egrave;me. 70% se sont d&eacute;clar&eacute;s pr&ecirc;ts &agrave; payer un montant suppl&eacute;mentaire pour disposer de celui-ci.</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>Les clients sont tr&egrave;s demandeurs de fonctionnalit&eacute;s d'assistance &agrave; distance pour des petites r&eacute;parations. La possibilit&eacute; pour les clients dont une machine est en panne d'entrer en contact \"visio-conf&eacute;rence\" avec les r&eacute;parateurs de Artos, ainsi que de laisser les r&eacute;parateurs prendre contr&ocirc;le &agrave; distance de la machine serait tr&egrave;s int&eacute;ressante. Ceci permettrait de diminuer le temps d'arr&ecirc;t des machines.</p>\n<p>&nbsp;</p>\n<p>L'int&eacute;r&ecirc;t pour des modules de formation semble moindre, voire nul.</p>\n<p>&nbsp;</p>\n<p>D'autre part, il ressort des discussions qu'il faudrait ajouter la possibilit&eacute; d'annoter les plans et de documenter les pannes. Ainsi, lors d'une panne, un utilisateur de la machine pourrait laisser une information sur comment il a r&eacute;solu le probl&egrave;me. Les suivants pourraient ensuite b&eacute;n&eacute;ficier de son exp&eacute;rience. Ceci est particuli&egrave;rement int&eacute;ressant pour les clients qui utilisent les machines 24 heures sur 24, avec 3 &eacute;quipes. En effet, les &eacute;quipes ne se connaissent pas toujours et ne partagent donc pas les informations.</p>",
                                                    "files": [],
                                                    "impact": {
                                                        "@class": "Script",
                                                        "content": "VariableDescriptorFacade.find(gameModel, \"projectFixedCosts\").add(self, 4500);\nVariableDescriptorFacade.find(gameModel, \"cardsPhase1\").add(self, -3);\nVariableDescriptorFacade.find(gameModel, \"userApproval\").add(self, 5);",
                                                        "language": "JavaScript"
                                                    }
                                                }
                                            ],
                                            "description": "<p>Vous r&eacute;pondez que vous &ecirc;tes int&eacute;ress&eacute; et souhaitez effectuer l'&eacute;valuation.</p>\n<p>&nbsp;</p>\n<p>Budget temps: 3</p>\n<p>Co&ucirc;ts: 4500.- (frais fixes du projet)</p>",
                                            "impact": null,
                                            "duration": 1,
                                            "cost": 0
                                        },
                                        {
                                            "@class": "SingleResultChoiceDescriptor",
                                            "name": "b__valuationSommaire",
                                            "label": "b) évaluation sommaire",
                                            "defaultInstance": {
                                                "@class": "ChoiceInstance",
                                                "active": true,
                                                "unread": true,
                                                "currentResultIndex": -1
                                            },
                                            "scope": {
                                                "@class": "TeamScope",
                                                "broadcastScope": "TeamScope"
                                            },
                                            "results": [
                                                {
                                                    "@class": "Result",
                                                    "name": "",
                                                    "answer": "<p>Les clients semblent tr&egrave;s int&eacute;ress&eacute;s par ce syst&egrave;me.</p>\n<p>&nbsp;</p>\n<p>D'autre part, il ressort des discussions qu'il faudrait ajouter la possibilit&eacute; d'annoter les plans et de documenter les pannes.</p>",
                                                    "files": [],
                                                    "impact": {
                                                        "@class": "Script",
                                                        "content": "VariableDescriptorFacade.find(gameModel, \"projectFixedCosts\").add(self, 2000);\nVariableDescriptorFacade.find(gameModel, \"cardsPhase1\").add(self, -1);\nVariableDescriptorFacade.find(gameModel, \"userApproval\").add(self, 2);",
                                                        "language": "JavaScript"
                                                    }
                                                }
                                            ],
                                            "description": "<p>Vous r&eacute;pondez que vous &ecirc;tes int&eacute;ress&eacute; et souhaitez effectuer une &eacute;valuation. Mais vous demandez de r&eacute;aliser une &eacute;valuation sommaire au lieu de l'&eacute;valuation compl&egrave;te.</p>\n<p>&nbsp;</p>\n<p>Budget temps: 1</p>\n<p>Co&ucirc;ts: 2000.- (frais fixes du projet)</p>",
                                            "impact": null,
                                            "duration": 1,
                                            "cost": 0
                                        },
                                        {
                                            "@class": "SingleResultChoiceDescriptor",
                                            "name": "c_Refuser_1",
                                            "label": "c) refuser",
                                            "defaultInstance": {
                                                "@class": "ChoiceInstance",
                                                "active": true,
                                                "unread": true,
                                                "currentResultIndex": -1
                                            },
                                            "scope": {
                                                "@class": "TeamScope",
                                                "broadcastScope": "TeamScope"
                                            },
                                            "results": [
                                                {
                                                    "@class": "Result",
                                                    "name": "",
                                                    "answer": "<p>En ordre</p>",
                                                    "files": [],
                                                    "impact": {
                                                        "@class": "Script",
                                                        "content": "VariableDescriptorFacade.find(gameModel, \"managementApproval\").add(self, -10);\nVariableDescriptorFacade.find(gameModel, \"userApproval\").add(self, -8);\nVariableDescriptorFacade.find(gameModel, \"inbox\").sendMessage(self, \"Direction\", \"Evaluation des besoins clients\", \"<p>Il para&icirc;t que vous vous engagez dans des projets sans tenir compte des besoins des clients. Je vous rappelle que l'une des devises de notre entreprise est \\\"r&eacute;pondre au plus proche aux besoins des clients\\\".</p>\\n<p>&nbsp;</p>\\n<p>Remarque: Vous n'aviez jamais entendu parler de cette devise, qui semble d'ailleurs avoir &eacute;t&eacute; cr&eacute;&eacute;e pour l'occasion. Toutefois votre image aupr&egrave;s de la direction s'est d&eacute;t&eacute;rior&eacute;e.</p>\", []);",
                                                        "language": "JavaScript"
                                                    }
                                                }
                                            ],
                                            "description": "<p>Vous r&eacute;pondez que pour ce projet vous n'effectuerez pas d'&eacute;valuation des besoins des clients.</p>",
                                            "impact": null,
                                            "duration": 1,
                                            "cost": 0
                                        }
                                    ],
                                    "pictures": []
                                },
                                {
                                    "@class": "QuestionDescriptor",
                                    "name": "a112_AnalysesDeFaisabilit_",
                                    "label": "Analyses de faisabilité",
                                    "defaultInstance": {
                                        "@class": "QuestionInstance",
                                        "replies": [],
                                        "active": true,
                                        "unread": true
                                    },
                                    "scope": {
                                        "@class": "TeamScope",
                                        "broadcastScope": "TeamScope"
                                    },
                                    "description": "<p>M. Dupuis, responsable de la R&amp;D, vous pose la question suivante : \"Lors de la phase d'avant-projet, si vous effectuez des analyses de faisabilit&eacute;, dans quel ordre les effectuez-vous ?\"</p>",
                                    "allowMultipleReplies": false,
                                    "items": [
                                        {
                                            "@class": "SingleResultChoiceDescriptor",
                                            "name": "a_March__Technique_Economique",
                                            "label": "a) Marché - Technique - Economique",
                                            "defaultInstance": {
                                                "@class": "ChoiceInstance",
                                                "active": true,
                                                "unread": true,
                                                "currentResultIndex": -1
                                            },
                                            "scope": {
                                                "@class": "TeamScope",
                                                "broadcastScope": "TeamScope"
                                            },
                                            "results": [
                                                {
                                                    "@class": "Result",
                                                    "name": "",
                                                    "answer": "<p>M. Dupuis est satisfait de votre r&eacute;ponse et, voyant vos comp&eacute;tences en gestion de projet, son support &agrave; votre &eacute;gard augmente</p>",
                                                    "files": [],
                                                    "impact": {
                                                        "@class": "Script",
                                                        "content": "VariableDescriptorFacade.find(gameModel, \"managementApproval\").add(self, 4);",
                                                        "language": "JavaScript"
                                                    }
                                                }
                                            ],
                                            "description": "<p>Vous r&eacute;pondez que vous effectueriez l'analyse de faisabilit&eacute; de march&eacute;, suivie de l'analyse de faisabilit&eacute; technique, puis termineriez par l'analyse de faisabilit&eacute; &eacute;conomique.</p>",
                                            "impact": null,
                                            "duration": 1,
                                            "cost": 0
                                        },
                                        {
                                            "@class": "SingleResultChoiceDescriptor",
                                            "name": "b_Technique_Economique_March_",
                                            "label": "b) Technique - Economique - Marché",
                                            "defaultInstance": {
                                                "@class": "ChoiceInstance",
                                                "active": true,
                                                "unread": true,
                                                "currentResultIndex": -1
                                            },
                                            "scope": {
                                                "@class": "TeamScope",
                                                "broadcastScope": "TeamScope"
                                            },
                                            "results": [
                                                {
                                                    "@class": "Result",
                                                    "name": "",
                                                    "answer": "<p>M. Dupuis se pose fortement la question de savoir comment vous allez r&eacute;aliser l'analyse &eacute;conomique alors que vous ne connaissez pas le march&eacute; potentiel. Ceci semble pour le moins difficile... D'autre part, il se demande pourquoi vous effectuez l'analyse de faisabilit&eacute; technique, en g&eacute;n&eacute;ral la plus co&ucirc;teuse, avant l'analyse de march&eacute;, qui pour un co&ucirc;t moindre permet de v&eacute;rifier que le projet r&eacute;pond &agrave; un besoin.</p>\n<p>&nbsp;</p>\n<p>Son soutien &agrave; votre &eacute;gard diminue.</p>",
                                                    "files": [],
                                                    "impact": {
                                                        "@class": "Script",
                                                        "content": "VariableDescriptorFacade.find(gameModel, \"managementApproval\").add(self, -6);",
                                                        "language": "JavaScript"
                                                    }
                                                }
                                            ],
                                            "description": "<p>Vous lui r&eacute;pondez que vous effectueriez l'analyse de faisabilit&eacute; technique, suivie de l'analyse de faisabilit&eacute; &eacute;conomique, puis termineriez par l'analyse de march&eacute;.</p>",
                                            "impact": null,
                                            "duration": 1,
                                            "cost": 0
                                        },
                                        {
                                            "@class": "SingleResultChoiceDescriptor",
                                            "name": "c_Economique_Technique_March_",
                                            "label": "c) Economique - Technique - Marché",
                                            "defaultInstance": {
                                                "@class": "ChoiceInstance",
                                                "active": true,
                                                "unread": true,
                                                "currentResultIndex": -1
                                            },
                                            "scope": {
                                                "@class": "TeamScope",
                                                "broadcastScope": "TeamScope"
                                            },
                                            "results": [
                                                {
                                                    "@class": "Result",
                                                    "name": "",
                                                    "answer": "<p>M. Dupuis se pose fortement la question de savoir comment vous allez r&eacute;aliser l'analyse de faisabilit&eacute; &eacute;conomique si vous ne connaissez pas le march&eacute; potentiel. Ceci semble pour le moins difficile...</p>\n<p>&nbsp;</p>\n<p>D'autre part, il aimerait savoir pourquoi vous effectuez l'analyse de faisabilit&eacute; technique, en g&eacute;n&eacute;ral la plus co&ucirc;teuse, avant l'analyse de march&eacute;, qui pour un co&ucirc;t moindre permet de v&eacute;rifier que le projet r&eacute;pond &agrave; un besoin.</p>\n<p>&nbsp;</p>\n<p>Son soutien &agrave; votre &eacute;gard diminue.</p>",
                                                    "files": [],
                                                    "impact": {
                                                        "@class": "Script",
                                                        "content": "VariableDescriptorFacade.find(gameModel, \"managementApproval\").add(self, -4);",
                                                        "language": "JavaScript"
                                                    }
                                                }
                                            ],
                                            "description": "<p>Vous lui r&eacute;pondez que vous effectueriez l'analyse de faisabilit&eacute; &eacute;conomique, suivie de l'analyse de faisabilit&eacute; technique, puis termineriez par l'analyse de march&eacute;.</p>",
                                            "impact": null,
                                            "duration": 1,
                                            "cost": 0
                                        },
                                        {
                                            "@class": "SingleResultChoiceDescriptor",
                                            "name": "d_NeSaisPas",
                                            "label": "d) Ne sais pas",
                                            "defaultInstance": {
                                                "@class": "ChoiceInstance",
                                                "active": true,
                                                "unread": true,
                                                "currentResultIndex": -1
                                            },
                                            "scope": {
                                                "@class": "TeamScope",
                                                "broadcastScope": "TeamScope"
                                            },
                                            "results": [
                                                {
                                                    "@class": "Result",
                                                    "name": "",
                                                    "answer": "<p>C'est mieux que de dire n'importe quoi, mais vous n'avez pas vraiment convaincu sur vos comp&eacute;tences en mati&egrave;re de gestion de projet.</p>\n<p>&nbsp;</p>\n<p>Le soutien de M. Dupuis &agrave; votre &eacute;gard diminue.</p>",
                                                    "files": [],
                                                    "impact": {
                                                        "@class": "Script",
                                                        "content": "VariableDescriptorFacade.find(gameModel, \"managementApproval\").add(self, -3);",
                                                        "language": "JavaScript"
                                                    }
                                                }
                                            ],
                                            "description": "<p>&nbsp;</p>\n<p class=\"p1\">Vous r&eacute;pondez que vous ne savez pas.</p>",
                                            "impact": null,
                                            "duration": 1,
                                            "cost": 0
                                        }
                                    ],
                                    "pictures": []
                                },
                                {
                                    "@class": "QuestionDescriptor",
                                    "name": "a113B_AssuranceTauxDeChange",
                                    "label": "Assurance taux de change",
                                    "defaultInstance": {
                                        "@class": "QuestionInstance",
                                        "replies": [],
                                        "active": true,
                                        "unread": true
                                    },
                                    "scope": {
                                        "@class": "TeamScope",
                                        "broadcastScope": "TeamScope"
                                    },
                                    "description": "<p>Si le projet est accept&eacute;, certains composants mat&eacute;riels seront command&eacute;s &agrave; l'&eacute;tranger.</p>\n<p>&nbsp;</p>\n<p>Afin de vous pr&eacute;munir des risques de change, votre banquier vous propose de conclure une assurance \"taux de change\" qui vous prot&egrave;gerait contre une &eacute;volution d&eacute;favorable des taux de change durant toute la dur&eacute;e du projet.</p>",
                                    "allowMultipleReplies": false,
                                    "items": [
                                        {
                                            "@class": "SingleResultChoiceDescriptor",
                                            "name": "a_Accepter_1",
                                            "label": "a) accepter",
                                            "defaultInstance": {
                                                "@class": "ChoiceInstance",
                                                "active": true,
                                                "unread": true,
                                                "currentResultIndex": -1
                                            },
                                            "scope": {
                                                "@class": "TeamScope",
                                                "broadcastScope": "TeamScope"
                                            },
                                            "results": [
                                                {
                                                    "@class": "Result",
                                                    "name": "",
                                                    "answer": "<p>En cas d'une modification d&eacute;favorable des taux de changes durant le projet, contacter le banquier. Il interviendra afin de r&eacute;soudre le probl&egrave;me.</p>",
                                                    "files": [],
                                                    "impact": {
                                                        "@class": "Script",
                                                        "content": "VariableDescriptorFacade.find(gameModel, \"projectFixedCosts\").add(self, 500);\nVariableDescriptorFacade.find(gameModel, \"cardsPhase1\").add(self, -1);",
                                                        "language": "JavaScript"
                                                    }
                                                }
                                            ],
                                            "description": "<p>Vous acceptez la proposition de votre banquier.</p>\n<p>&nbsp;</p>\n<p>Budget temps: 1</p>\n<p>Co&ucirc;t: 500.- (frais fixes du projet)</p>",
                                            "impact": null,
                                            "duration": 1,
                                            "cost": 0
                                        },
                                        {
                                            "@class": "SingleResultChoiceDescriptor",
                                            "name": "b_Refuser_1",
                                            "label": "b) refuser",
                                            "defaultInstance": {
                                                "@class": "ChoiceInstance",
                                                "active": true,
                                                "unread": true,
                                                "currentResultIndex": -1
                                            },
                                            "scope": {
                                                "@class": "TeamScope",
                                                "broadcastScope": "TeamScope"
                                            },
                                            "results": [
                                                {
                                                    "@class": "Result",
                                                    "name": "",
                                                    "answer": "<p>Il est possible qu'une fluctuation des taux de change en cours de projet modifie partiellement le budget d'acquisition de mat&eacute;riel &agrave; l'&eacute;tranger.</p>",
                                                    "files": [],
                                                    "impact": {
                                                        "@class": "Script",
                                                        "content": "",
                                                        "language": "JavaScript"
                                                    }
                                                }
                                            ],
                                            "description": "<p>Vous refusez de contracter l'assurance \"taux de change\".</p>",
                                            "impact": null,
                                            "duration": 1,
                                            "cost": 0
                                        }
                                    ],
                                    "pictures": []
                                },
                                {
                                    "@class": "QuestionDescriptor",
                                    "name": "faisabilit_DeMarch_",
                                    "label": "Faisabilité de marché",
                                    "defaultInstance": {
                                        "@class": "QuestionInstance",
                                        "replies": [],
                                        "active": true,
                                        "unread": true
                                    },
                                    "scope": {
                                        "@class": "TeamScope",
                                        "broadcastScope": "TeamScope"
                                    },
                                    "description": "<p>Le service marketing vous propose d'affiner l'estimation de base fournie par le responsable marketing dans le document \"&eacute;tat de situation\" et d'analyser l'int&eacute;r&ecirc;t commercial de la r&eacute;alisation du syst&egrave;me e-assistance.</p>",
                                    "allowMultipleReplies": false,
                                    "items": [
                                        {
                                            "@class": "SingleResultChoiceDescriptor",
                                            "name": "a_R_aliserL__tude",
                                            "label": "a) réaliser l'étude",
                                            "defaultInstance": {
                                                "@class": "ChoiceInstance",
                                                "active": true,
                                                "unread": true,
                                                "currentResultIndex": -1
                                            },
                                            "scope": {
                                                "@class": "TeamScope",
                                                "broadcastScope": "TeamScope"
                                            },
                                            "results": [
                                                {
                                                    "@class": "Result",
                                                    "name": "",
                                                    "answer": "<p>Vous avez effectu&eacute; une enqu&ecirc;te aupr&egrave;s d'un &eacute;chantillon de clients repr&eacute;sentatifs. Cette enqu&ecirc;te montre que l'int&eacute;r&ecirc;t des clients est plus grand que ne le laissait penser le responsable marketing. Il semble que cette option ne permettrait pas d'augmenter les ventes. Par contre, on peut estimer qu'un suppl&eacute;ment de 3'500.- pour cette option serait raisonnable.</p>\n<p>&nbsp;</p>\n<p>A ce prix, environ 250 machines seraient vendues avec cette nouvelle option pour les 7 ann&eacute;es &agrave; venir, r&eacute;parties proportionnellement sur les 7 ann&eacute;es.</p>\n<p>&nbsp;</p>\n<p>Il semble qu'il ne serait pas possible pour le moment de vendre cette option pour les machines existantes. Ceci devrait faire l'objet d'un autre projet.</p>",
                                                    "files": [],
                                                    "impact": {
                                                        "@class": "Script",
                                                        "content": "VariableDescriptorFacade.find(gameModel, \"projectFixedCosts\").add(self, 4000);\nVariableDescriptorFacade.find(gameModel, \"cardsPhase1\").add(self, -3);",
                                                        "language": "JavaScript"
                                                    }
                                                }
                                            ],
                                            "description": "<p>Vous acceptez la proposition. Vous obtiendrez des informations suppl&eacute;mentaires et plus pr&eacute;cises concernant le potentiel de clients int&eacute;ress&eacute;s, ainsi que sur le prix qu'ils seraient pr&ecirc;ts &agrave; payer pour ce syst&egrave;me.</p>\n<p>&nbsp;</p>\n<p>Budget temps: 3</p>\n<p>Co&ucirc;ts: 4000.- (frais fixes du projet)</p>",
                                            "impact": null,
                                            "duration": 1,
                                            "cost": 0
                                        },
                                        {
                                            "@class": "SingleResultChoiceDescriptor",
                                            "name": "b_R_aliserUne_tudeSommaire",
                                            "label": "b) réaliser une étude sommaire",
                                            "defaultInstance": {
                                                "@class": "ChoiceInstance",
                                                "active": true,
                                                "unread": true,
                                                "currentResultIndex": -1
                                            },
                                            "scope": {
                                                "@class": "TeamScope",
                                                "broadcastScope": "TeamScope"
                                            },
                                            "results": [
                                                {
                                                    "@class": "Result",
                                                    "name": "",
                                                    "answer": "<p>Vous avez effectu&eacute; une enqu&ecirc;te sommaire aupr&egrave;s d'un &eacute;chantillon de clients repr&eacute;sentatifs. Cette enqu&ecirc;te montre que l'int&eacute;r&ecirc;t des clients est plus grand que ne le laissait penser le responsable marketing.</p>\n<p>&nbsp;</p>\n<p>Il semble que cette option ne permettrait pas d'augmenter les ventes. Par contre, on peut estimer qu'un suppl&eacute;ment de prix situ&eacute; entre 2'000.- et 3'500.- pour cette option serait raisonnable.</p>\n<p>&nbsp;</p>\n<p>A ce prix, entre 150 et 300 machines seraient vendues avec cette nouvelle option pour les 7 ann&eacute;es &agrave; venir, r&eacute;parties proportionnellement sur les 7 ann&eacute;es.</p>\n<p>&nbsp;</p>\n<p>Une enqu&ecirc;te plus pr&eacute;cise devrait &ecirc;tre effectu&eacute;e pour obtenir des chiffres plus pr&eacute;cis.</p>",
                                                    "files": [],
                                                    "impact": {
                                                        "@class": "Script",
                                                        "content": "VariableDescriptorFacade.find(gameModel, \"projectFixedCosts\").add(self, 2000);\nVariableDescriptorFacade.find(gameModel, \"cardsPhase1\").add(self, -2);",
                                                        "language": "JavaScript"
                                                    }
                                                }
                                            ],
                                            "description": "<p>Vous acceptez la proposition, mais proposez de faire une &eacute;tude sommaire. Vous obtiendrez des informations g&eacute;n&eacute;rales concernant le potentiel de clients int&eacute;ress&eacute;s, ainsi que sur le prix de vente de cette option.</p>\n<p>&nbsp;</p>\n<p>Budget temps: 2</p>\n<p>Co&ucirc;ts: 2000.- (frais fixes du projet)</p>",
                                            "impact": null,
                                            "duration": 1,
                                            "cost": 0
                                        },
                                        {
                                            "@class": "SingleResultChoiceDescriptor",
                                            "name": "c_NePasR_aliserL__tude",
                                            "label": "c) ne pas réaliser l'étude",
                                            "defaultInstance": {
                                                "@class": "ChoiceInstance",
                                                "active": true,
                                                "unread": true,
                                                "currentResultIndex": -1
                                            },
                                            "scope": {
                                                "@class": "TeamScope",
                                                "broadcastScope": "TeamScope"
                                            },
                                            "results": [
                                                {
                                                    "@class": "Result",
                                                    "name": "",
                                                    "answer": "<p>Esp&eacute;rons que les donn&eacute;es de base sont correctes...</p>",
                                                    "files": [],
                                                    "impact": {
                                                        "@class": "Script",
                                                        "content": "",
                                                        "language": "JavaScript"
                                                    }
                                                }
                                            ],
                                            "description": "<p>Vous r&eacute;pondez que vous conservez l'estimation de base fournie par le responsable marketing.</p>",
                                            "impact": null,
                                            "duration": 1,
                                            "cost": 0
                                        }
                                    ],
                                    "pictures": []
                                }
                            ]
                        },
                        {
                            "@class": "ListDescriptor",
                            "name": "Questions period 2",
                            "label": "Questions period 2",
                            "defaultInstance": {
                                "@class": "NumberInstance",
                                "history": [],
                                "value": 0
                            },
                            "scope": {
                                "@class": "GameScope",
                                "broadcastScope": "PlayerScope"
                            },
                            "items": []
                        }
                    ]
                }
            ]
        },
        {
            "@class": "ListDescriptor",
            "name": "tasks",
            "label": "Tasks",
            "defaultInstance": {
                "@class": "ListInstance"
            },
            "scope": {
                "@class": "TeamScope",
                "broadcastScope": "TeamScope"
            },
            "items": [
                {
                    "@class": "TaskDescriptor",
                    "name": "ChoixEnvironnementDéveloppement",
                    "label": "Choix environnement développement",
                    "defaultInstance": {
                        "@class": "TaskInstance",
                        "active": true,
                        "duration": 1,
                        "plannification": [],
                        "properties": {
                            "fixedCosts": "1000",
                            "wages": "0",
                            "bac": "0",
                            "predecessorsDependances": "1000",
                            "unworkedHoursCosts": "0",
                            "quality": "0",
                            "completeness": "0"
                        },
                        "requirements": [
                            {
                                "@class": "WRequirement",
                                "limit": 100,
                                "work": "Informaticien Logiciel",
                                "level": 2,
                                "quantity": 1,
                                "completeness": 0,
                                "quality": 0
                            },
                            {
                                "@class": "WRequirement",
                                "limit": 100,
                                "work": "Consultant IT",
                                "level": 5,
                                "quantity": 1,
                                "completeness": 0,
                                "quality": 0
                            }
                        ]
                    },
                    "scope": {
                        "@class": "TeamScope",
                        "broadcastScope": "TeamScope"
                    },
                    "description": "<p>Cette activit&eacute; a pour objectif de comparer les diff&eacute;rents environnements de d&eacute;veloppement existants sur le&nbsp;<span style=\"line-height: 1.231;\">march&eacute; (co&ucirc;t, facilit&eacute; de d&eacute;veloppement, compatibilit&eacute; avec les syst&egrave;mes existants, p&eacute;rennit&eacute;), puis de choisir&nbsp;</span><span style=\"line-height: 1.231;\">l'environnement le plus appropri&eacute; au projet.</span></p>\n<p>Cette activit&eacute; peut se d&eacute;rouler en parall&egrave;le avec l'analyse de l'existant.</p>",
                    "index": 1,
                    "properties": {
                        "randomDurationInf": "0",
                        "progressionOfNeeds": "0",
                        "coordinationRatioInf": "1.0",
                        "competenceRatioInf": "2.0",
                        "randomDurationSup": "0",
                        "competenceRatioSup": "1.0",
                        "coordinationRatioSup": "0.8",
                        "takeInHandDuration": "20",
                        "bonusRatio": "1.0"
                    },
                    "predecessors": []
                },
                {
                    "@class": "TaskDescriptor",
                    "name": "AnalyseExistant",
                    "label": "Analyse existant",
                    "defaultInstance": {
                        "@class": "TaskInstance",
                        "active": true,
                        "duration": 1,
                        "plannification": [],
                        "properties": {
                            "fixedCosts": "0",
                            "wages": "0",
                            "bac": "0",
                            "predecessorsDependances": "1000",
                            "unworkedHoursCosts": "0",
                            "quality": "0",
                            "completeness": "0"
                        },
                        "requirements": [
                            {
                                "@class": "WRequirement",
                                "limit": 100,
                                "work": "Informaticien Hardware",
                                "level": 5,
                                "quantity": 1,
                                "completeness": 0,
                                "quality": 0
                            },
                            {
                                "@class": "WRequirement",
                                "limit": 100,
                                "work": "Informaticien Hardware",
                                "level": 2,
                                "quantity": 1,
                                "completeness": 0,
                                "quality": 0
                            }
                        ]
                    },
                    "scope": {
                        "@class": "TeamScope",
                        "broadcastScope": "TeamScope"
                    },
                    "description": "<p>Objectifs:</p>\n<p>Le futur logiciel devant certainement fonctionner en interaction avec les syst&egrave;mes existants, il s'agit de&nbsp;<span style=\"line-height: 1.231;\">regrouper l'ensemble des informations relatives au hardware et software utilis&eacute;s dans les machines actuelles.&nbsp;</span><span style=\"line-height: 1.231;\">Le 2&egrave;me objectif est de regrouper l'ensemble des informations relatives aux donn&eacute;es li&eacute;es aux machines&nbsp;</span><span style=\"line-height: 1.231;\">(pannes, plans, etc.).</span></p>",
                    "index": 2,
                    "properties": {
                        "randomDurationInf": "0",
                        "progressionOfNeeds": "0",
                        "coordinationRatioInf": "1.5",
                        "competenceRatioInf": "2.0",
                        "randomDurationSup": "0.4",
                        "competenceRatioSup": "1.0",
                        "coordinationRatioSup": "0.8",
                        "takeInHandDuration": "20",
                        "bonusRatio": "1.0"
                    },
                    "predecessors": []
                },
                {
                    "@class": "TaskDescriptor",
                    "name": "AnalyseBesoins",
                    "label": "Analyse besoins",
                    "defaultInstance": {
                        "@class": "TaskInstance",
                        "active": true,
                        "duration": 2,
                        "plannification": [],
                        "properties": {
                            "fixedCosts": "500",
                            "wages": "0",
                            "bac": "0",
                            "predecessorsDependances": "1000",
                            "unworkedHoursCosts": "0",
                            "quality": "0",
                            "completeness": "0"
                        },
                        "requirements": [
                            {
                                "@class": "WRequirement",
                                "limit": 100,
                                "work": "Commercial",
                                "level": 2,
                                "quantity": 1,
                                "completeness": 0,
                                "quality": 0
                            },
                            {
                                "@class": "WRequirement",
                                "limit": 100,
                                "work": "Commercial",
                                "level": 5,
                                "quantity": 1,
                                "completeness": 0,
                                "quality": 0
                            },
                            {
                                "@class": "WRequirement",
                                "limit": 60,
                                "work": "Monteur",
                                "level": 5,
                                "quantity": 1,
                                "completeness": 0,
                                "quality": 0
                            }
                        ]
                    },
                    "scope": {
                        "@class": "TeamScope",
                        "broadcastScope": "TeamScope"
                    },
                    "description": "<p>Objectifs:</p>\n<p>R&eacute;colte de l'ensemble des informations relatives aux diff&eacute;rents besoins des clients (interview de quelques&nbsp;<span style=\"line-height: 1.231;\">clients repr&eacute;sentatifs) et des monteurs-r&eacute;parateurs (invitation des monteurs &agrave; une s&eacute;ance g&eacute;n&eacute;rale, interview&nbsp;</span><span style=\"line-height: 1.231;\">de quelques monteurs repr&eacute;sentatifs)</span></p>\n<p>&nbsp;</p>\n<p>Remarque:</p>\n<p>Cette activit&eacute; peut se d&eacute;rouler en parall&egrave;le avec l'analyse de l'existant et le choix de l'environnement de&nbsp;<span style=\"line-height: 1.231;\">d&eacute;veloppement.</span></p>",
                    "index": 3,
                    "properties": {
                        "randomDurationInf": "0",
                        "progressionOfNeeds": "0",
                        "coordinationRatioInf": "1.5",
                        "competenceRatioInf": "2.0",
                        "randomDurationSup": "0",
                        "competenceRatioSup": "1.0",
                        "coordinationRatioSup": "0.8",
                        "takeInHandDuration": "20",
                        "bonusRatio": "1.0"
                    },
                    "predecessors": []
                },
                {
                    "@class": "TaskDescriptor",
                    "name": "DossierSpécifications",
                    "label": "Dossier spécification",
                    "defaultInstance": {
                        "@class": "TaskInstance",
                        "active": true,
                        "duration": 1,
                        "plannification": [],
                        "properties": {
                            "fixedCosts": "0",
                            "wages": "0",
                            "bac": "0",
                            "predecessorsDependances": "2",
                            "unworkedHoursCosts": "0",
                            "quality": "0",
                            "completeness": "0"
                        },
                        "requirements": [
                            {
                                "@class": "WRequirement",
                                "limit": 100,
                                "work": "Informaticien Logiciel",
                                "level": 6,
                                "quantity": 1,
                                "completeness": 0,
                                "quality": 0
                            },
                            {
                                "@class": "WRequirement",
                                "limit": 100,
                                "work": "Consultant IT",
                                "level": 5,
                                "quantity": 1,
                                "completeness": 0,
                                "quality": 0
                            }
                        ]
                    },
                    "scope": {
                        "@class": "TeamScope",
                        "broadcastScope": "TeamScope"
                    },
                    "description": "<p>Objectifs:</p>\n<p>R&eacute;aliser un dossier de sp&eacute;cification qui servira de base &agrave; la r&eacute;alisation du syst&egrave;me.</p>\n<p>Cette t&acirc;che a besoin des informations provenant des analyses de l'existant et des besoins, ainsi que du choix&nbsp;<span style=\"line-height: 1.231;\">de l'environnement de d&eacute;veloppement. Toutefois, le travail peut d&eacute;buter m&ecirc;me si elles ne sont pas encore&nbsp;</span><span style=\"line-height: 1.231;\">enti&egrave;rement termin&eacute;es.</span></p>\n<p>&nbsp;</p>\n<p>Remarque: le dossier de sp&eacute;cification doit &ecirc;tre enti&egrave;rement termin&eacute; pour &ecirc;tre valid&eacute; et transmis aux personnes&nbsp;<span style=\"line-height: 1.231;\">responsables de la mod&eacute;lisation. La mod&eacute;lisation ne peut pas d&eacute;buter avant que le dossier de sp&eacute;cification&nbsp;</span><span style=\"line-height: 1.231;\">soit enti&egrave;rement termin&eacute;.</span></p>",
                    "index": 4,
                    "properties": {
                        "randomDurationInf": "0",
                        "progressionOfNeeds": "0",
                        "coordinationRatioInf": "1.2",
                        "competenceRatioInf": "1.0",
                        "randomDurationSup": "0",
                        "competenceRatioSup": "1.0",
                        "coordinationRatioSup": "1.0",
                        "takeInHandDuration": "20",
                        "bonusRatio": "1.0"
                    },
                    "predecessors": []
                },
                {
                    "@class": "TaskDescriptor",
                    "name": "ModélisationDonnées",
                    "label": "Modélisation données",
                    "defaultInstance": {
                        "@class": "TaskInstance",
                        "active": true,
                        "duration": 1,
                        "plannification": [],
                        "properties": {
                            "fixedCosts": "1000",
                            "wages": "0",
                            "bac": "0",
                            "predecessorsDependances": "1000",
                            "unworkedHoursCosts": "0",
                            "quality": "0",
                            "completeness": "0"
                        },
                        "requirements": [
                            {
                                "@class": "WRequirement",
                                "limit": 100,
                                "work": "Informaticien Logiciel",
                                "level": 2,
                                "quantity": 2,
                                "completeness": 0,
                                "quality": 0
                            },
                            {
                                "@class": "WRequirement",
                                "limit": 100,
                                "work": "Informaticien Logiciel",
                                "level": 8,
                                "quantity": 1,
                                "completeness": 0,
                                "quality": 0
                            }
                        ]
                    },
                    "scope": {
                        "@class": "TeamScope",
                        "broadcastScope": "TeamScope"
                    },
                    "description": "<p>Objectifs:</p>\n<p>R&eacute;aliser un mod&egrave;le de donn&eacute;es qui servira de base pour la programmation de la base de donn&eacute;es.</p>\n<p>Le dossier de sp&eacute;cification et le prototype utilisateur (si vous avez choisi de le r&eacute;aliser) doivent &ecirc;tre termin&eacute;s&nbsp;<span style=\"line-height: 1.231;\">pour que cette t&acirc;che puisse d&eacute;buter.</span></p>",
                    "index": 5,
                    "properties": {
                        "randomDurationInf": "0",
                        "progressionOfNeeds": "0",
                        "coordinationRatioInf": "1.5",
                        "competenceRatioInf": "1.5",
                        "randomDurationSup": "0",
                        "competenceRatioSup": "1.0",
                        "coordinationRatioSup": "0.8",
                        "takeInHandDuration": "20",
                        "bonusRatio": "1.0"
                    },
                    "predecessors": []
                },
                {
                    "@class": "TaskDescriptor",
                    "name": "ModélisationTraitements",
                    "label": "Modélisation traitements",
                    "defaultInstance": {
                        "@class": "TaskInstance",
                        "active": true,
                        "duration": 2,
                        "plannification": [],
                        "properties": {
                            "fixedCosts": "2000",
                            "wages": "0",
                            "bac": "0",
                            "predecessorsDependances": "1000",
                            "unworkedHoursCosts": "0",
                            "quality": "0",
                            "completeness": "0"
                        },
                        "requirements": [
                            {
                                "@class": "WRequirement",
                                "limit": 100,
                                "work": "Informaticien Logiciel",
                                "level": 8,
                                "quantity": 1,
                                "completeness": 0,
                                "quality": 0
                            },
                            {
                                "@class": "WRequirement",
                                "limit": 100,
                                "work": "Informaticien Logiciel",
                                "level": 5,
                                "quantity": 1,
                                "completeness": 0,
                                "quality": 0
                            },
                            {
                                "@class": "WRequirement",
                                "limit": 100,
                                "work": "Informaticien Logiciel",
                                "level": 2,
                                "quantity": 2,
                                "completeness": 0,
                                "quality": 0
                            }
                        ]
                    },
                    "scope": {
                        "@class": "TeamScope",
                        "broadcastScope": "TeamScope"
                    },
                    "description": "<p>Objectifs:</p>\n<p>R&eacute;aliser un mod&egrave;le des traitements qui servira de base pour la programmation des traitements.</p>\n<p>Le dossier de sp&eacute;cification et le prototype utilisateur (si vous avez choisi de le r&eacute;aliser) doivent &ecirc;tre termin&eacute;s&nbsp;<span style=\"line-height: 1.231;\">pour que cette t&acirc;che puisse d&eacute;buter.</span></p>",
                    "index": 6,
                    "properties": {
                        "randomDurationInf": "0",
                        "progressionOfNeeds": "0",
                        "coordinationRatioInf": "1.0",
                        "competenceRatioInf": "1.0",
                        "randomDurationSup": "0",
                        "competenceRatioSup": "1.0",
                        "coordinationRatioSup": "0.8",
                        "takeInHandDuration": "20",
                        "bonusRatio": "1.0"
                    },
                    "predecessors": []
                },
                {
                    "@class": "TaskDescriptor",
                    "name": "ModélisationIHM",
                    "label": "Modélisation IHM",
                    "defaultInstance": {
                        "@class": "TaskInstance",
                        "active": true,
                        "duration": 1,
                        "plannification": [],
                        "properties": {
                            "fixedCosts": "0",
                            "wages": "0",
                            "bac": "0",
                            "predecessorsDependances": "1000",
                            "unworkedHoursCosts": "0",
                            "quality": "0",
                            "completeness": "0"
                        },
                        "requirements": [
                            {
                                "@class": "WRequirement",
                                "limit": 100,
                                "work": "Web Designer",
                                "level": 8,
                                "quantity": 1,
                                "completeness": 0,
                                "quality": 0
                            },
                            {
                                "@class": "WRequirement",
                                "limit": 100,
                                "work": "Web Designer",
                                "level": 2,
                                "quantity": 1,
                                "completeness": 0,
                                "quality": 0
                            }
                        ]
                    },
                    "scope": {
                        "@class": "TeamScope",
                        "broadcastScope": "TeamScope"
                    },
                    "description": "<p>&Eacute;tablir le mod&egrave;le de l'interface homme-machine (IHM). Sur la base de ce mod&egrave;le sera d&eacute;velopp&eacute; l'interface.</p>\n<p>Le dossier de sp&eacute;cification et le prototype utilisateur (si vous avez choisi de le r&eacute;aliser) doivent &ecirc;tre termin&eacute;s</p>\n<p>pour que cette t&acirc;che puisse d&eacute;buter.</p>",
                    "index": 7,
                    "properties": {
                        "randomDurationInf": "0",
                        "progressionOfNeeds": "0",
                        "coordinationRatioInf": "1.1",
                        "competenceRatioInf": "1.0",
                        "randomDurationSup": "0",
                        "competenceRatioSup": "1.0",
                        "coordinationRatioSup": "0.9",
                        "takeInHandDuration": "20",
                        "bonusRatio": "1.0"
                    },
                    "predecessors": []
                },
                {
                    "@class": "TaskDescriptor",
                    "name": "ProgrammationBD",
                    "label": "Programmation BD",
                    "defaultInstance": {
                        "@class": "TaskInstance",
                        "active": true,
                        "duration": 1,
                        "plannification": [],
                        "properties": {
                            "fixedCosts": "2000",
                            "wages": "0",
                            "bac": "0",
                            "predecessorsDependances": "2",
                            "unworkedHoursCosts": "0",
                            "quality": "0",
                            "completeness": "0"
                        },
                        "requirements": [
                            {
                                "@class": "WRequirement",
                                "limit": 100,
                                "work": "Informaticien Logiciel",
                                "level": 5,
                                "quantity": 1,
                                "completeness": 0,
                                "quality": 0
                            },
                            {
                                "@class": "WRequirement",
                                "limit": 100,
                                "work": "Informaticien Logiciel",
                                "level": 2,
                                "quantity": 2,
                                "completeness": 0,
                                "quality": 0
                            }
                        ]
                    },
                    "scope": {
                        "@class": "TeamScope",
                        "broadcastScope": "TeamScope"
                    },
                    "description": "<p>Objectifs:</p>\n<p>Programmation de la base de donn&eacute;es.</p>\n<p>&nbsp;</p>\n<p>Remarques:</p>\n<p>Cette t&acirc;che peut d&eacute;buter d&egrave;s que la mod&eacute;lisation des donn&eacute;es est presque termin&eacute;e (m&ecirc;me si la mod&eacute;lisation&nbsp;<span style=\"line-height: 1.231;\">des traitements n'est pas termin&eacute;e).</span></p>",
                    "index": 8,
                    "properties": {
                        "randomDurationInf": "0",
                        "progressionOfNeeds": "0",
                        "coordinationRatioInf": "1.1",
                        "competenceRatioInf": "1.0",
                        "randomDurationSup": "0",
                        "competenceRatioSup": "1.0",
                        "coordinationRatioSup": "0.9",
                        "takeInHandDuration": "20",
                        "bonusRatio": "1.0"
                    },
                    "predecessors": []
                },
                {
                    "@class": "TaskDescriptor",
                    "name": "ProgrammationTraitements",
                    "label": "Programmation traitements",
                    "defaultInstance": {
                        "@class": "TaskInstance",
                        "active": true,
                        "duration": 3,
                        "plannification": [],
                        "properties": {
                            "fixedCosts": "1000",
                            "wages": "0",
                            "bac": "0",
                            "predecessorsDependances": "3",
                            "unworkedHoursCosts": "0",
                            "quality": "0",
                            "completeness": "0"
                        },
                        "requirements": [
                            {
                                "@class": "WRequirement",
                                "limit": 100,
                                "work": "Informaticien Logiciel",
                                "level": 5,
                                "quantity": 2,
                                "completeness": 0,
                                "quality": 0
                            },
                            {
                                "@class": "WRequirement",
                                "limit": 100,
                                "work": "Informaticien Logiciel",
                                "level": 2,
                                "quantity": 2,
                                "completeness": 0,
                                "quality": 0
                            },
                            {
                                "@class": "WRequirement",
                                "limit": 100,
                                "work": "Informaticien Logiciel",
                                "level": 8,
                                "quantity": 1,
                                "completeness": 0,
                                "quality": 0
                            }
                        ]
                    },
                    "scope": {
                        "@class": "TeamScope",
                        "broadcastScope": "TeamScope"
                    },
                    "description": "<p>Objectifs:</p>\n<p>Programmation du code relatif aux traitements des donn&eacute;es, sur la base de la mod&eacute;lisation des traitements.</p>\n<p>&nbsp;</p>\n<p>Remarques:</p>\n<p>La programmation des traitements ne peut d&eacute;buter que si la mod&eacute;lisation des donn&eacute;es et la mod&eacute;lisation des&nbsp;<span style=\"line-height: 1.231;\">traitements sont presque termin&eacute;es.</span></p>\n<p>Un programmeur qui rejoint en cours de programmation a besoin d'un petit temps de mise &agrave; niveau avant de&nbsp;<span style=\"line-height: 1.231;\">pouvoir &ecirc;tre op&eacute;rationnel (environ une demi-semaine).</span></p>",
                    "index": 9,
                    "properties": {
                        "randomDurationInf": "0",
                        "progressionOfNeeds": "0",
                        "coordinationRatioInf": "1.0",
                        "competenceRatioInf": "1.0",
                        "randomDurationSup": "0",
                        "competenceRatioSup": "1.0",
                        "coordinationRatioSup": "0.8",
                        "takeInHandDuration": "30",
                        "bonusRatio": "1.0"
                    },
                    "predecessors": []
                },
                {
                    "@class": "TaskDescriptor",
                    "name": "ProgrammationIHM",
                    "label": "Programmation IHM",
                    "defaultInstance": {
                        "@class": "TaskInstance",
                        "active": true,
                        "duration": 2,
                        "plannification": [],
                        "properties": {
                            "fixedCosts": "2000",
                            "wages": "0",
                            "bac": "0",
                            "predecessorsDependances": "1000",
                            "unworkedHoursCosts": "0",
                            "quality": "0",
                            "completeness": "0"
                        },
                        "requirements": [
                            {
                                "@class": "WRequirement",
                                "limit": 80,
                                "work": "Web Designer",
                                "level": 5,
                                "quantity": 1,
                                "completeness": 0,
                                "quality": 0
                            },
                            {
                                "@class": "WRequirement",
                                "limit": 90,
                                "work": "Informaticien Logiciel",
                                "level": 5,
                                "quantity": 2,
                                "completeness": 0,
                                "quality": 0
                            }
                        ]
                    },
                    "scope": {
                        "@class": "TeamScope",
                        "broadcastScope": "TeamScope"
                    },
                    "description": "<p>Programmation de l'interface homme-machine, sur la base de ce qui a &eacute;t&eacute; mod&eacute;lis&eacute;.</p>\n<p>La programmation de l'IHM ne peut d&eacute;buter que lorsque la mod&eacute;lisation de l'IHM est enti&egrave;rement termin&eacute;e.</p>",
                    "index": 10,
                    "properties": {
                        "randomDurationInf": "0",
                        "progressionOfNeeds": "0",
                        "coordinationRatioInf": "1.7",
                        "competenceRatioInf": "1.5",
                        "randomDurationSup": "0",
                        "competenceRatioSup": "1.0",
                        "coordinationRatioSup": "0.8",
                        "takeInHandDuration": "20",
                        "bonusRatio": "1.0"
                    },
                    "predecessors": []
                },
                {
                    "@class": "TaskDescriptor",
                    "name": "PromotionSystème",
                    "label": "Promotion du système",
                    "defaultInstance": {
                        "@class": "TaskInstance",
                        "active": true,
                        "duration": 3,
                        "plannification": [],
                        "properties": {
                            "fixedCosts": "4000",
                            "wages": "0",
                            "bac": "0",
                            "predecessorsDependances": "1000",
                            "unworkedHoursCosts": "0",
                            "quality": "0",
                            "completeness": "0"
                        },
                        "requirements": [
                            {
                                "@class": "WRequirement",
                                "limit": 100,
                                "work": "Commercial",
                                "level": 8,
                                "quantity": 1,
                                "completeness": 0,
                                "quality": 0
                            },
                            {
                                "@class": "WRequirement",
                                "limit": 100,
                                "work": "Commercial",
                                "level": 2,
                                "quantity": 2,
                                "completeness": 0,
                                "quality": 0
                            },
                            {
                                "@class": "WRequirement",
                                "limit": 100,
                                "work": "Commercial",
                                "level": 5,
                                "quantity": 3,
                                "completeness": 0,
                                "quality": 0
                            }
                        ]
                    },
                    "scope": {
                        "@class": "TeamScope",
                        "broadcastScope": "TeamScope"
                    },
                    "description": "<p>Objectifs:</p>\n<p>Faire conna&icirc;tre le nouveau syst&egrave;me aux utilisateurs. Il s'agit entre autres de r&eacute;aliser une brochure, pr&eacute;parer les&nbsp;<span style=\"line-height: 1.231;\">informations pour le site web, effectuer la prospection et pr&eacute;senter le syst&egrave;me dans une foire pour machines-outils.</span></p>\n<p>La promotion du syst&egrave;me peut d&eacute;buter d&egrave;s que le dossier de sp&eacute;cification est enti&egrave;rement termin&eacute;.</p>",
                    "index": 11,
                    "properties": {
                        "randomDurationInf": "0",
                        "progressionOfNeeds": "0",
                        "coordinationRatioInf": "1.0",
                        "competenceRatioInf": "1.0",
                        "randomDurationSup": "0",
                        "competenceRatioSup": "1.0",
                        "coordinationRatioSup": "1.0",
                        "takeInHandDuration": "10",
                        "bonusRatio": "1.0"
                    },
                    "predecessors": []
                },
                {
                    "@class": "TaskDescriptor",
                    "name": "Tests",
                    "label": "Tests",
                    "defaultInstance": {
                        "@class": "TaskInstance",
                        "active": true,
                        "duration": 1,
                        "plannification": [],
                        "properties": {
                            "fixedCosts": "0",
                            "wages": "0",
                            "bac": "0",
                            "predecessorsDependances": "1000",
                            "unworkedHoursCosts": "0",
                            "quality": "0",
                            "completeness": "0"
                        },
                        "requirements": [
                            {
                                "@class": "WRequirement",
                                "limit": 50,
                                "work": "Monteur",
                                "level": 2,
                                "quantity": 1,
                                "completeness": 0,
                                "quality": 0
                            },
                            {
                                "@class": "WRequirement",
                                "limit": 100,
                                "work": "Informaticien Logiciel",
                                "level": 2,
                                "quantity": 1,
                                "completeness": 0,
                                "quality": 0
                            },
                            {
                                "@class": "WRequirement",
                                "limit": 100,
                                "work": "Informaticien Hardware",
                                "level": 5,
                                "quantity": 1,
                                "completeness": 0,
                                "quality": 0
                            }
                        ]
                    },
                    "scope": {
                        "@class": "TeamScope",
                        "broadcastScope": "TeamScope"
                    },
                    "description": "<p>Objectifs:</p>\n<p>R&eacute;aliser les tests du syst&egrave;me avant de l'int&eacute;grer comme option sur les nouvelles machines.</p>\n<p>&nbsp;</p>\n<p>Remarques:</p>\n<p>Cette t&acirc;che peut se r&eacute;aliser en parall&egrave;le avec la t&acirc;che \"implantation machine\". La programmation de la BD,&nbsp;<span style=\"line-height: 1.231;\">des traitements et de l'IHM doivent &ecirc;tre enti&egrave;rement termin&eacute;s.</span></p>",
                    "index": 12,
                    "properties": {
                        "randomDurationInf": "0",
                        "progressionOfNeeds": "0",
                        "coordinationRatioInf": "1.0",
                        "competenceRatioInf": "1.0",
                        "randomDurationSup": "0",
                        "competenceRatioSup": "1.0",
                        "coordinationRatioSup": "0.3",
                        "takeInHandDuration": "20",
                        "bonusRatio": "1.0"
                    },
                    "predecessors": []
                },
                {
                    "@class": "TaskDescriptor",
                    "name": "ImplantationMachine",
                    "label": "Implantation machine",
                    "defaultInstance": {
                        "@class": "TaskInstance",
                        "active": true,
                        "duration": 2,
                        "plannification": [],
                        "properties": {
                            "fixedCosts": "0",
                            "wages": "0",
                            "bac": "0",
                            "predecessorsDependances": "1000",
                            "unworkedHoursCosts": "0",
                            "quality": "0",
                            "completeness": "0"
                        },
                        "requirements": [
                            {
                                "@class": "WRequirement",
                                "limit": 80,
                                "work": "Informaticien Hardware",
                                "level": 5,
                                "quantity": 1,
                                "completeness": 0,
                                "quality": 0
                            },
                            {
                                "@class": "WRequirement",
                                "limit": 100,
                                "work": "Informaticien Logiciel",
                                "level": 8,
                                "quantity": 1,
                                "completeness": 0,
                                "quality": 0
                            },
                            {
                                "@class": "WRequirement",
                                "limit": 100,
                                "work": "Informaticien Logiciel",
                                "level": 2,
                                "quantity": 2,
                                "completeness": 0,
                                "quality": 0
                            }
                        ]
                    },
                    "scope": {
                        "@class": "TeamScope",
                        "broadcastScope": "TeamScope"
                    },
                    "description": "<p>Objectifs:</p>\n<p>Implanter le syst&egrave;me dans une machine pilote, puis dans les machines livr&eacute;es aux clients.</p>\n<p>&nbsp;</p>\n<p>Remarques:</p>\n<p>Cette t&acirc;che peut se d&eacute;rouler en parall&egrave;le avec les tests.</p>\n<p>L'ensemble de la programmation doit &ecirc;tre enti&egrave;rement termin&eacute;e pour que cette t&acirc;che puisse d&eacute;buter.</p>",
                    "index": 13,
                    "properties": {
                        "randomDurationInf": "0",
                        "progressionOfNeeds": "0",
                        "coordinationRatioInf": "1.0",
                        "competenceRatioInf": "1.0",
                        "randomDurationSup": "0",
                        "competenceRatioSup": "1.0",
                        "coordinationRatioSup": "0.8",
                        "takeInHandDuration": "20",
                        "bonusRatio": "1.0"
                    },
                    "predecessors": []
                },
                {
                    "@class": "TaskDescriptor",
                    "name": "PrototypeUtilisateur",
                    "label": "Prototype utilisateur",
                    "defaultInstance": {
                        "@class": "TaskInstance",
                        "active": false,
                        "duration": 1,
                        "plannification": [],
                        "properties": {
                            "fixedCosts": "0",
                            "wages": "0",
                            "bac": "0",
                            "predecessorsDependances": "4",
                            "unworkedHoursCosts": "0",
                            "quality": "0",
                            "completeness": "0"
                        },
                        "requirements": [
                            {
                                "@class": "WRequirement",
                                "limit": 100,
                                "work": "Commercial",
                                "level": 5,
                                "quantity": 1,
                                "completeness": 0,
                                "quality": 0
                            },
                            {
                                "@class": "WRequirement",
                                "limit": 100,
                                "work": "Informaticien Logiciel",
                                "level": 5,
                                "quantity": 1,
                                "completeness": 0,
                                "quality": 0
                            }
                        ]
                    },
                    "scope": {
                        "@class": "TeamScope",
                        "broadcastScope": "TeamScope"
                    },
                    "description": "<p>Objectifs:</p>\n<p>R&eacute;alisation d'un prototype du syst&egrave;me (simulation de l'interface avec quelques fonctionnalit&eacute;s de base) et&nbsp;<span style=\"line-height: 1.231;\">pr&eacute;sentation aux futurs utilisateurs afin de r&eacute;colter leurs remarques et propositions d'am&eacute;lioration.</span></p>\n<p>Il s'agit d'une application \"jetable\" qui peut d&eacute;buter d&egrave;s que les diff&eacute;rentes analyses sont passablement&nbsp;<span style=\"line-height: 1.231;\">avanc&eacute;es.</span></p>\n<p>&nbsp;</p>\n<p>Remarques:</p>\n<p>Le prototype peut &ecirc;tre r&eacute;alis&eacute; apr&egrave;s les analyses pr&eacute;liminaires, en parall&egrave;le au dossier de sp&eacute;cification.</p>\n<p>Il doit &ecirc;tre termin&eacute; au maximum en m&ecirc;me temps que celui-ci, de mani&egrave;re &agrave; ce que les retours des&nbsp;<span style=\"line-height: 1.231;\">pr&eacute;sentations aux futurs utilisateurs puissent &ecirc;tre pris en compte.</span></p>",
                    "index": 14,
                    "properties": {
                        "randomDurationInf": "0",
                        "progressionOfNeeds": "0",
                        "coordinationRatioInf": "1.0",
                        "competenceRatioInf": "1.0",
                        "randomDurationSup": "0",
                        "competenceRatioSup": "1.0",
                        "coordinationRatioSup": "1.0",
                        "takeInHandDuration": "20",
                        "bonusRatio": "1.0"
                    },
                    "predecessors": []
                },
                {
                    "@class": "TaskDescriptor",
                    "name": "CorrectionModélisationTraitements",
                    "label": "Correction \"modélisation des traitements\"",
                    "defaultInstance": {
                        "@class": "TaskInstance",
                        "active": false,
                        "duration": 0,
                        "plannification": [],
                        "properties": {
                            "fixedCosts": "0",
                            "wages": "0",
                            "bac": "0",
                            "predecessorsDependances": "1000",
                            "unworkedHoursCosts": "0",
                            "quality": "0",
                            "completeness": "0"
                        },
                        "requirements": [
                            {
                                "@class": "WRequirement",
                                "limit": 100,
                                "work": "Informaticien Logiciel",
                                "level": 5,
                                "quantity": 1,
                                "completeness": 0,
                                "quality": 0
                            },
                            {
                                "@class": "WRequirement",
                                "limit": 100,
                                "work": "Informaticien Logiciel",
                                "level": 8,
                                "quantity": 1,
                                "completeness": 0,
                                "quality": 0
                            }
                        ]
                    },
                    "scope": {
                        "@class": "TeamScope",
                        "broadcastScope": "TeamScope"
                    },
                    "description": "<p>Objectifs:</p>\n<p>Correction des erreurs r&eacute;alis&eacute;es durant la mod&eacute;lisation des traitements.</p>\n<p>Cette activit&eacute; doit &ecirc;tre termin&eacute;e avant de pouvoir d&eacute;buter les tests.</p>",
                    "index": 15,
                    "properties": {
                        "randomDurationInf": "0",
                        "progressionOfNeeds": "0",
                        "coordinationRatioInf": "1.0",
                        "competenceRatioInf": "1.0",
                        "randomDurationSup": "0",
                        "competenceRatioSup": "1.0",
                        "coordinationRatioSup": "0.3",
                        "takeInHandDuration": "0",
                        "bonusRatio": "1.0"
                    },
                    "predecessors": []
                },
                {
                    "@class": "TaskDescriptor",
                    "name": "CorrectionProgrammationTraitements",
                    "label": "Correction programmation traitements",
                    "defaultInstance": {
                        "@class": "TaskInstance",
                        "active": false,
                        "duration": 0,
                        "plannification": [],
                        "properties": {
                            "fixedCosts": "0",
                            "wages": "0",
                            "bac": "0",
                            "predecessorsDependances": "1000",
                            "unworkedHoursCosts": "0",
                            "quality": "0",
                            "completeness": "0"
                        },
                        "requirements": [
                            {
                                "@class": "WRequirement",
                                "limit": 100,
                                "work": "Informaticien Logiciel",
                                "level": 8,
                                "quantity": 1,
                                "completeness": 0,
                                "quality": 0
                            },
                            {
                                "@class": "WRequirement",
                                "limit": 100,
                                "work": "Informaticien Logiciel",
                                "level": 5,
                                "quantity": 2,
                                "completeness": 0,
                                "quality": 0
                            }
                        ]
                    },
                    "scope": {
                        "@class": "TeamScope",
                        "broadcastScope": "TeamScope"
                    },
                    "description": "<p>Objectifs:</p>\n<p>Correction des erreurs r&eacute;alis&eacute;es durant la programmation des traitements.</p>\n<p>&nbsp;</p>\n<p>Si les tests sont en cours, cette activit&eacute; doit &ecirc;tre termin&eacute;e avant de poursuivre les tests.</p>",
                    "index": 16,
                    "properties": {
                        "randomDurationInf": "1.0",
                        "progressionOfNeeds": "0",
                        "coordinationRatioInf": "1.0",
                        "competenceRatioInf": "1.0",
                        "randomDurationSup": "1.0",
                        "competenceRatioSup": "1.0",
                        "coordinationRatioSup": "0.3",
                        "takeInHandDuration": "0",
                        "bonusRatio": "1.0"
                    },
                    "predecessors": []
                }
            ]
        },
        {
            "@class": "ListDescriptor",
            "name": "employees",
            "label": "Employees",
            "defaultInstance": {
                "@class": "ListInstance"
            },
            "scope": {
                "@class": "TeamScope",
                "broadcastScope": "TeamScope"
            },
            "items": [
                {
                    "@class": "ListDescriptor",
                    "name": "commercial",
                    "label": "Commercial",
                    "defaultInstance": {
                        "@class": "ListInstance"
                    },
                    "scope": {
                        "@class": "TeamScope",
                        "broadcastScope": "TeamScope"
                    },
                    "items": [
                        {
                            "@class": "ResourceDescriptor",
                            "name": "Gaelle",
                            "label": "Gaelle",
                            "defaultInstance": {
                                "@class": "ResourceInstance",
                                "assignments": [],
                                "occupations": [],
                                "activities": [],
                                "active": true,
                                "skillsets": {
                                    "Commercial": 1
                                },
                                "properties": {
                                    "activityRate": "100",
                                    "wage": "5000"
                                },
                                "moral": 6,
                                "moralHistory": [
                                    8,
                                    6,
                                    6
                                ],
                                "confidence": null,
                                "confidenceHistory": [
                                    null
                                ]
                            },
                            "scope": {
                                "@class": "TeamScope",
                                "broadcastScope": "TeamScope"
                            },
                            "description": "",
                            "properties": {
                                "coef_activity": "1",
                                "coef_moral": "1",
                                "maxBilledUnworkedHours": "0",
                                "planningAvailability": "false",
                                "engagementDelay": "0"
                            }
                        },
                        {
                            "@class": "ResourceDescriptor",
                            "name": "Irène",
                            "label": "Irène",
                            "defaultInstance": {
                                "@class": "ResourceInstance",
                                "assignments": [],
                                "occupations": [],
                                "activities": [],
                                "active": true,
                                "skillsets": {
                                    "Commercial": 2
                                },
                                "properties": {
                                    "activityRate": "100",
                                    "wage": "6000"
                                },
                                "moral": 6,
                                "moralHistory": [
                                    8,
                                    6,
                                    6,
                                    6,
                                    6,
                                    6,
                                    6,
                                    6,
                                    6
                                ],
                                "confidence": null,
                                "confidenceHistory": [
                                    null,
                                    null,
                                    null,
                                    null
                                ]
                            },
                            "scope": {
                                "@class": "TeamScope",
                                "broadcastScope": "TeamScope"
                            },
                            "description": "",
                            "properties": {
                                "coef_activity": "1",
                                "coef_moral": "1",
                                "maxBilledUnworkedHours": "0",
                                "planningAvailability": "false",
                                "engagementDelay": "1"
                            }
                        },
                        {
                            "@class": "ResourceDescriptor",
                            "name": "Yves",
                            "label": "Yves",
                            "defaultInstance": {
                                "@class": "ResourceInstance",
                                "assignments": [],
                                "occupations": [],
                                "activities": [],
                                "active": true,
                                "skillsets": {
                                    "Commercial": 4
                                },
                                "properties": {
                                    "activityRate": "100",
                                    "wage": "7500"
                                },
                                "moral": 7,
                                "moralHistory": [
                                    8,
                                    6,
                                    6,
                                    6,
                                    6,
                                    6,
                                    6,
                                    6,
                                    6,
                                    6,
                                    6,
                                    7,
                                    7
                                ],
                                "confidence": null,
                                "confidenceHistory": [
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null
                                ]
                            },
                            "scope": {
                                "@class": "TeamScope",
                                "broadcastScope": "TeamScope"
                            },
                            "description": "",
                            "properties": {
                                "coef_activity": "1",
                                "coef_moral": "1",
                                "maxBilledUnworkedHours": "0",
                                "planningAvailability": "false",
                                "engagementDelay": "0"
                            }
                        },
                        {
                            "@class": "ResourceDescriptor",
                            "name": "René",
                            "label": "René",
                            "defaultInstance": {
                                "@class": "ResourceInstance",
                                "assignments": [],
                                "occupations": [],
                                "activities": [],
                                "active": true,
                                "skillsets": {
                                    "Commercial": 5
                                },
                                "properties": {
                                    "activityRate": "70",
                                    "wage": "8200"
                                },
                                "moral": 8,
                                "moralHistory": [
                                    8,
                                    6,
                                    6,
                                    6,
                                    6,
                                    6,
                                    6,
                                    6,
                                    6,
                                    6,
                                    6,
                                    7,
                                    7,
                                    8,
                                    8
                                ],
                                "confidence": null,
                                "confidenceHistory": [
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null
                                ]
                            },
                            "scope": {
                                "@class": "TeamScope",
                                "broadcastScope": "TeamScope"
                            },
                            "description": "",
                            "properties": {
                                "coef_activity": "1",
                                "coef_moral": "1",
                                "maxBilledUnworkedHours": "0",
                                "planningAvailability": "false",
                                "engagementDelay": "0"
                            }
                        },
                        {
                            "@class": "ResourceDescriptor",
                            "name": "Claude",
                            "label": "Claude",
                            "defaultInstance": {
                                "@class": "ResourceInstance",
                                "assignments": [],
                                "occupations": [],
                                "activities": [],
                                "active": true,
                                "skillsets": {
                                    "Commercial": 8
                                },
                                "properties": {
                                    "activityRate": "100",
                                    "wage": "8500"
                                },
                                "moral": 9,
                                "moralHistory": [
                                    9,
                                    9,
                                    9,
                                    9,
                                    8,
                                    6,
                                    6,
                                    6,
                                    6,
                                    6,
                                    6,
                                    6,
                                    6,
                                    6,
                                    6,
                                    7,
                                    7,
                                    8,
                                    8
                                ],
                                "confidence": null,
                                "confidenceHistory": [
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null
                                ]
                            },
                            "scope": {
                                "@class": "TeamScope",
                                "broadcastScope": "TeamScope"
                            },
                            "description": "",
                            "properties": {
                                "coef_activity": "1",
                                "coef_moral": "1",
                                "maxBilledUnworkedHours": "0",
                                "planningAvailability": "false",
                                "engagementDelay": "2"
                            }
                        },
                        {
                            "@class": "ResourceDescriptor",
                            "name": "Luc",
                            "label": "Luc",
                            "defaultInstance": {
                                "@class": "ResourceInstance",
                                "assignments": [],
                                "occupations": [],
                                "activities": [],
                                "active": true,
                                "skillsets": {
                                    "Commercial": 8
                                },
                                "properties": {
                                    "activityRate": "100",
                                    "wage": "10000"
                                },
                                "moral": 7,
                                "moralHistory": [
                                    9,
                                    9,
                                    9,
                                    9,
                                    8,
                                    6,
                                    6,
                                    6,
                                    6,
                                    6,
                                    6,
                                    6,
                                    6,
                                    6,
                                    6,
                                    7,
                                    7,
                                    8,
                                    8,
                                    7,
                                    7
                                ],
                                "confidence": null,
                                "confidenceHistory": [
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null
                                ]
                            },
                            "scope": {
                                "@class": "TeamScope",
                                "broadcastScope": "TeamScope"
                            },
                            "description": "",
                            "properties": {
                                "coef_activity": "1",
                                "coef_moral": "1",
                                "maxBilledUnworkedHours": "0",
                                "planningAvailability": "false",
                                "engagementDelay": "0"
                            }
                        }
                    ]
                },
                {
                    "@class": "ListDescriptor",
                    "name": "consultantIT",
                    "label": "Consultant IT",
                    "defaultInstance": {
                        "@class": "ListInstance"
                    },
                    "scope": {
                        "@class": "TeamScope",
                        "broadcastScope": "TeamScope"
                    },
                    "items": [
                        {
                            "@class": "ResourceDescriptor",
                            "name": "Jean",
                            "label": "Jean",
                            "defaultInstance": {
                                "@class": "ResourceInstance",
                                "assignments": [],
                                "occupations": [],
                                "activities": [],
                                "active": true,
                                "skillsets": {
                                    "Consultant IT": 5
                                },
                                "properties": {
                                    "activityRate": "100",
                                    "wage": "8000"
                                },
                                "moral": 7,
                                "moralHistory": [
                                    8,
                                    8,
                                    8,
                                    7,
                                    7
                                ],
                                "confidence": null,
                                "confidenceHistory": [
                                    0,
                                    null
                                ]
                            },
                            "scope": {
                                "@class": "TeamScope",
                                "broadcastScope": "TeamScope"
                            },
                            "description": "",
                            "properties": {
                                "coef_activity": "1",
                                "coef_moral": "1",
                                "maxBilledUnworkedHours": "0",
                                "planningAvailability": "false",
                                "engagementDelay": "1"
                            }
                        },
                        {
                            "@class": "ResourceDescriptor",
                            "name": "Kurt",
                            "label": "Kurt",
                            "defaultInstance": {
                                "@class": "ResourceInstance",
                                "assignments": [],
                                "occupations": [],
                                "activities": [],
                                "active": true,
                                "skillsets": {
                                    "Consultant IT": 5
                                },
                                "properties": {
                                    "activityRate": "70",
                                    "wage": "9500"
                                },
                                "moral": 8,
                                "moralHistory": [
                                    8,
                                    8,
                                    8,
                                    7,
                                    7,
                                    8,
                                    8
                                ],
                                "confidence": null,
                                "confidenceHistory": [
                                    0,
                                    null,
                                    null
                                ]
                            },
                            "scope": {
                                "@class": "TeamScope",
                                "broadcastScope": "TeamScope"
                            },
                            "description": "",
                            "properties": {
                                "coef_activity": "1",
                                "coef_moral": "1",
                                "maxBilledUnworkedHours": "0",
                                "planningAvailability": "false",
                                "engagementDelay": "0"
                            }
                        },
                        {
                            "@class": "ResourceDescriptor",
                            "name": "André",
                            "label": "André",
                            "defaultInstance": {
                                "@class": "ResourceInstance",
                                "assignments": [],
                                "occupations": [],
                                "activities": [],
                                "active": true,
                                "skillsets": {
                                    "Consultant IT": 8
                                },
                                "properties": {
                                    "activityRate": "100",
                                    "wage": "10000"
                                },
                                "moral": 7,
                                "moralHistory": [
                                    8,
                                    8,
                                    8,
                                    7,
                                    7,
                                    8,
                                    8,
                                    7,
                                    7
                                ],
                                "confidence": null,
                                "confidenceHistory": [
                                    0,
                                    null,
                                    null,
                                    null
                                ]
                            },
                            "scope": {
                                "@class": "TeamScope",
                                "broadcastScope": "TeamScope"
                            },
                            "description": "",
                            "properties": {
                                "coef_activity": "1",
                                "coef_moral": "1",
                                "maxBilledUnworkedHours": "0",
                                "planningAvailability": "false",
                                "engagementDelay": "1"
                            }
                        }
                    ]
                },
                {
                    "@class": "ListDescriptor",
                    "name": "informaticienHardware",
                    "label": "Informaticien Hardware",
                    "defaultInstance": {
                        "@class": "ListInstance"
                    },
                    "scope": {
                        "@class": "TeamScope",
                        "broadcastScope": "TeamScope"
                    },
                    "items": [
                        {
                            "@class": "ResourceDescriptor",
                            "name": "Fabien",
                            "label": "Fabien",
                            "defaultInstance": {
                                "@class": "ResourceInstance",
                                "assignments": [],
                                "occupations": [],
                                "activities": [],
                                "active": true,
                                "skillsets": {
                                    "Informaticien Hardware": 2
                                },
                                "properties": {
                                    "activityRate": "100",
                                    "wage": "4500"
                                },
                                "moral": 9,
                                "moralHistory": [
                                    8,
                                    8,
                                    8,
                                    7,
                                    7,
                                    8,
                                    8,
                                    7,
                                    7,
                                    9,
                                    9
                                ],
                                "confidence": null,
                                "confidenceHistory": [
                                    0,
                                    null,
                                    null,
                                    null,
                                    null
                                ]
                            },
                            "scope": {
                                "@class": "TeamScope",
                                "broadcastScope": "TeamScope"
                            },
                            "description": "",
                            "properties": {
                                "coef_activity": "1",
                                "coef_moral": "1",
                                "maxBilledUnworkedHours": "0",
                                "planningAvailability": "false",
                                "engagementDelay": "0"
                            }
                        },
                        {
                            "@class": "ResourceDescriptor",
                            "name": "Murielle",
                            "label": "Murielle",
                            "defaultInstance": {
                                "@class": "ResourceInstance",
                                "assignments": [],
                                "occupations": [],
                                "activities": [],
                                "active": true,
                                "skillsets": {
                                    "Informaticien Hardware": 2
                                },
                                "properties": {
                                    "activityRate": "100",
                                    "wage": "5000"
                                },
                                "moral": 7,
                                "moralHistory": [
                                    8,
                                    8,
                                    8,
                                    7,
                                    7,
                                    8,
                                    8,
                                    7,
                                    7,
                                    9,
                                    9,
                                    7,
                                    7
                                ],
                                "confidence": null,
                                "confidenceHistory": [
                                    0,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null
                                ]
                            },
                            "scope": {
                                "@class": "TeamScope",
                                "broadcastScope": "TeamScope"
                            },
                            "description": "",
                            "properties": {
                                "coef_activity": "1",
                                "coef_moral": "1",
                                "maxBilledUnworkedHours": "0",
                                "planningAvailability": "false",
                                "engagementDelay": "0"
                            }
                        },
                        {
                            "@class": "ResourceDescriptor",
                            "name": "Bastien",
                            "label": "Bastien",
                            "defaultInstance": {
                                "@class": "ResourceInstance",
                                "assignments": [],
                                "occupations": [],
                                "activities": [],
                                "active": true,
                                "skillsets": {
                                    "Informaticien Hardware": 5
                                },
                                "properties": {
                                    "activityRate": "100",
                                    "wage": "7000"
                                },
                                "moral": 5,
                                "moralHistory": [
                                    8,
                                    8,
                                    8,
                                    7,
                                    7,
                                    8,
                                    8,
                                    7,
                                    7,
                                    9,
                                    9,
                                    7,
                                    7,
                                    5,
                                    5
                                ],
                                "confidence": null,
                                "confidenceHistory": [
                                    0,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null
                                ]
                            },
                            "scope": {
                                "@class": "TeamScope",
                                "broadcastScope": "TeamScope"
                            },
                            "description": "",
                            "properties": {
                                "coef_activity": "1",
                                "coef_moral": "1",
                                "maxBilledUnworkedHours": "0",
                                "planningAvailability": "false",
                                "engagementDelay": "1"
                            }
                        },
                        {
                            "@class": "ResourceDescriptor",
                            "name": "Hervé",
                            "label": "Hervé",
                            "defaultInstance": {
                                "@class": "ResourceInstance",
                                "assignments": [],
                                "occupations": [],
                                "activities": [],
                                "active": true,
                                "skillsets": {
                                    "Informaticien Hardware": 5
                                },
                                "properties": {
                                    "activityRate": "100",
                                    "wage": "9000"
                                },
                                "moral": 8,
                                "moralHistory": [
                                    8,
                                    8,
                                    8,
                                    7,
                                    7,
                                    8,
                                    8,
                                    7,
                                    7,
                                    9,
                                    9,
                                    7,
                                    7,
                                    5,
                                    5,
                                    8,
                                    8
                                ],
                                "confidence": null,
                                "confidenceHistory": [
                                    0,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null
                                ]
                            },
                            "scope": {
                                "@class": "TeamScope",
                                "broadcastScope": "TeamScope"
                            },
                            "description": "",
                            "properties": {
                                "coef_activity": "1",
                                "coef_moral": "1",
                                "maxBilledUnworkedHours": "0",
                                "planningAvailability": "false",
                                "engagementDelay": "0"
                            }
                        },
                        {
                            "@class": "ResourceDescriptor",
                            "name": "Pierre",
                            "label": "Pierre",
                            "defaultInstance": {
                                "@class": "ResourceInstance",
                                "assignments": [],
                                "occupations": [],
                                "activities": [],
                                "active": true,
                                "skillsets": {
                                    "Informaticien Hardware": 5
                                },
                                "properties": {
                                    "activityRate": "80",
                                    "wage": "8800"
                                },
                                "moral": 6,
                                "moralHistory": [
                                    6,
                                    6,
                                    8,
                                    8,
                                    8,
                                    7,
                                    7,
                                    8,
                                    8,
                                    7,
                                    7,
                                    9,
                                    9,
                                    7,
                                    7,
                                    5,
                                    5,
                                    8,
                                    8
                                ],
                                "confidence": null,
                                "confidenceHistory": [
                                    0,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null
                                ]
                            },
                            "scope": {
                                "@class": "TeamScope",
                                "broadcastScope": "TeamScope"
                            },
                            "description": "",
                            "properties": {
                                "coef_activity": "1",
                                "coef_moral": "1",
                                "maxBilledUnworkedHours": "0",
                                "planningAvailability": "false",
                                "engagementDelay": "0"
                            }
                        },
                        {
                            "@class": "ResourceDescriptor",
                            "name": "Zoé",
                            "label": "Zoé",
                            "defaultInstance": {
                                "@class": "ResourceInstance",
                                "assignments": [],
                                "occupations": [],
                                "activities": [],
                                "active": true,
                                "skillsets": {
                                    "Informaticien Hardware": 8
                                },
                                "properties": {
                                    "activityRate": "80",
                                    "wage": "9500"
                                },
                                "moral": 7,
                                "moralHistory": [
                                    6,
                                    6,
                                    8,
                                    8,
                                    8,
                                    7,
                                    7,
                                    8,
                                    8,
                                    7,
                                    7,
                                    9,
                                    9,
                                    7,
                                    7,
                                    5,
                                    5,
                                    8,
                                    8,
                                    7,
                                    7
                                ],
                                "confidence": null,
                                "confidenceHistory": [
                                    0,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null
                                ]
                            },
                            "scope": {
                                "@class": "TeamScope",
                                "broadcastScope": "TeamScope"
                            },
                            "description": "",
                            "properties": {
                                "coef_activity": "1",
                                "coef_moral": "1",
                                "maxBilledUnworkedHours": "0",
                                "planningAvailability": "false",
                                "engagementDelay": "1"
                            }
                        }
                    ]
                },
                {
                    "@class": "ListDescriptor",
                    "name": "informaticienLogiciel",
                    "label": "Informaticien Logiciel",
                    "defaultInstance": {
                        "@class": "ListInstance"
                    },
                    "scope": {
                        "@class": "TeamScope",
                        "broadcastScope": "TeamScope"
                    },
                    "items": [
                        {
                            "@class": "ResourceDescriptor",
                            "name": "Philippe",
                            "label": "Philippe",
                            "defaultInstance": {
                                "@class": "ResourceInstance",
                                "assignments": [],
                                "occupations": [],
                                "activities": [],
                                "active": true,
                                "skillsets": {
                                    "Informaticien Logiciel": 2
                                },
                                "properties": {
                                    "activityRate": "100",
                                    "wage": "5500"
                                },
                                "moral": 8,
                                "moralHistory": [
                                    8,
                                    8,
                                    8,
                                    7,
                                    7,
                                    8,
                                    8,
                                    7,
                                    7,
                                    9,
                                    9,
                                    7,
                                    7,
                                    5,
                                    5,
                                    8,
                                    8,
                                    7,
                                    7,
                                    6,
                                    8,
                                    8
                                ],
                                "confidence": null,
                                "confidenceHistory": [
                                    0,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null
                                ]
                            },
                            "scope": {
                                "@class": "TeamScope",
                                "broadcastScope": "TeamScope"
                            },
                            "description": "",
                            "properties": {
                                "coef_activity": "1",
                                "coef_moral": "1",
                                "maxBilledUnworkedHours": "0",
                                "planningAvailability": "false",
                                "engagementDelay": "0"
                            }
                        },
                        {
                            "@class": "ResourceDescriptor",
                            "name": "Tom",
                            "label": "Tom",
                            "defaultInstance": {
                                "@class": "ResourceInstance",
                                "assignments": [],
                                "occupations": [],
                                "activities": [],
                                "active": true,
                                "skillsets": {
                                    "Informaticien Logiciel": 2
                                },
                                "properties": {
                                    "activityRate": "100",
                                    "wage": "3000"
                                },
                                "moral": 5,
                                "moralHistory": [
                                    7,
                                    7,
                                    7,
                                    7,
                                    9,
                                    9,
                                    7,
                                    7,
                                    5,
                                    5,
                                    7,
                                    7,
                                    6,
                                    8,
                                    8,
                                    8,
                                    8,
                                    8,
                                    8,
                                    8,
                                    8,
                                    5,
                                    5
                                ],
                                "confidence": null,
                                "confidenceHistory": [
                                    0,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null
                                ]
                            },
                            "scope": {
                                "@class": "TeamScope",
                                "broadcastScope": "TeamScope"
                            },
                            "description": "",
                            "properties": {
                                "coef_activity": "1",
                                "coef_moral": "1",
                                "maxBilledUnworkedHours": "0",
                                "planningAvailability": "false",
                                "engagementDelay": "0"
                            }
                        },
                        {
                            "@class": "ResourceDescriptor",
                            "name": "Diane",
                            "label": "Diane",
                            "defaultInstance": {
                                "@class": "ResourceInstance",
                                "assignments": [],
                                "occupations": [],
                                "activities": [],
                                "active": true,
                                "skillsets": {
                                    "Informaticien Logiciel": 5
                                },
                                "properties": {
                                    "activityRate": "100",
                                    "wage": "6600"
                                },
                                "moral": 7,
                                "moralHistory": [
                                    7,
                                    7,
                                    7,
                                    7,
                                    9,
                                    9,
                                    7,
                                    7,
                                    5,
                                    5,
                                    7,
                                    7,
                                    6,
                                    8,
                                    8,
                                    8,
                                    8,
                                    8,
                                    8,
                                    8,
                                    8,
                                    5,
                                    5,
                                    7
                                ],
                                "confidence": null,
                                "confidenceHistory": [
                                    0,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null
                                ]
                            },
                            "scope": {
                                "@class": "TeamScope",
                                "broadcastScope": "TeamScope"
                            },
                            "description": "",
                            "properties": {
                                "coef_activity": "1",
                                "coef_moral": "1",
                                "maxBilledUnworkedHours": "0",
                                "planningAvailability": "false",
                                "engagementDelay": "3"
                            }
                        },
                        {
                            "@class": "ResourceDescriptor",
                            "name": "Noémie",
                            "label": "Noémie",
                            "defaultInstance": {
                                "@class": "ResourceInstance",
                                "assignments": [],
                                "occupations": [],
                                "activities": [],
                                "active": true,
                                "skillsets": {
                                    "Informaticien Logiciel": 5
                                },
                                "properties": {
                                    "activityRate": "100",
                                    "wage": "9000"
                                },
                                "moral": 10,
                                "moralHistory": [
                                    9,
                                    9,
                                    5,
                                    5,
                                    6,
                                    8,
                                    8,
                                    8,
                                    8,
                                    8,
                                    8,
                                    8,
                                    8,
                                    5,
                                    5,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    10,
                                    10
                                ],
                                "confidence": null,
                                "confidenceHistory": [
                                    0,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null
                                ]
                            },
                            "scope": {
                                "@class": "TeamScope",
                                "broadcastScope": "TeamScope"
                            },
                            "description": "",
                            "properties": {
                                "coef_activity": "1",
                                "coef_moral": "1",
                                "maxBilledUnworkedHours": "0",
                                "planningAvailability": "false",
                                "engagementDelay": "0"
                            }
                        },
                        {
                            "@class": "ResourceDescriptor",
                            "name": "Urs",
                            "label": "Urs",
                            "defaultInstance": {
                                "@class": "ResourceInstance",
                                "assignments": [],
                                "occupations": [],
                                "activities": [],
                                "active": true,
                                "skillsets": {
                                    "Informaticien Logiciel": 5
                                },
                                "properties": {
                                    "activityRate": "100",
                                    "wage": "7000"
                                },
                                "moral": 7,
                                "moralHistory": [
                                    5,
                                    5,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    10,
                                    10,
                                    8,
                                    8,
                                    8,
                                    8,
                                    8,
                                    8,
                                    8,
                                    7,
                                    7,
                                    9,
                                    9,
                                    5,
                                    5,
                                    6
                                ],
                                "confidence": null,
                                "confidenceHistory": [
                                    0,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null
                                ]
                            },
                            "scope": {
                                "@class": "TeamScope",
                                "broadcastScope": "TeamScope"
                            },
                            "description": "",
                            "properties": {
                                "coef_activity": "1",
                                "coef_moral": "1",
                                "maxBilledUnworkedHours": "0",
                                "planningAvailability": "false",
                                "engagementDelay": "1"
                            }
                        },
                        {
                            "@class": "ResourceDescriptor",
                            "name": "Xavier",
                            "label": "Xavier",
                            "defaultInstance": {
                                "@class": "ResourceInstance",
                                "assignments": [],
                                "occupations": [],
                                "activities": [],
                                "active": true,
                                "skillsets": {
                                    "Informaticien Logiciel": 5
                                },
                                "properties": {
                                    "activityRate": "100",
                                    "wage": "7500"
                                },
                                "moral": 7,
                                "moralHistory": [
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    10,
                                    10,
                                    8,
                                    8,
                                    8,
                                    8,
                                    8,
                                    8,
                                    8,
                                    7,
                                    7,
                                    9,
                                    9,
                                    6,
                                    5,
                                    5,
                                    5,
                                    7,
                                    7
                                ],
                                "confidence": null,
                                "confidenceHistory": [
                                    0,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null
                                ]
                            },
                            "scope": {
                                "@class": "TeamScope",
                                "broadcastScope": "TeamScope"
                            },
                            "description": "",
                            "properties": {
                                "coef_activity": "1",
                                "coef_moral": "1",
                                "maxBilledUnworkedHours": "0",
                                "planningAvailability": "false",
                                "engagementDelay": "3"
                            }
                        },
                        {
                            "@class": "ResourceDescriptor",
                            "name": "Yvonne",
                            "label": "Yvonne",
                            "defaultInstance": {
                                "@class": "ResourceInstance",
                                "assignments": [],
                                "occupations": [],
                                "activities": [],
                                "active": true,
                                "skillsets": {
                                    "Informaticien Logiciel": 5
                                },
                                "properties": {
                                    "activityRate": "80",
                                    "wage": "7000"
                                },
                                "moral": 7,
                                "moralHistory": [
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    10,
                                    10,
                                    8,
                                    8,
                                    8,
                                    8,
                                    8,
                                    8,
                                    8,
                                    7,
                                    7,
                                    9,
                                    9,
                                    6,
                                    5,
                                    5,
                                    5,
                                    7,
                                    7,
                                    7
                                ],
                                "confidence": null,
                                "confidenceHistory": [
                                    0,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null
                                ]
                            },
                            "scope": {
                                "@class": "TeamScope",
                                "broadcastScope": "TeamScope"
                            },
                            "description": "",
                            "properties": {
                                "coef_activity": "1",
                                "coef_moral": "1",
                                "maxBilledUnworkedHours": "0",
                                "planningAvailability": "false",
                                "engagementDelay": "1"
                            }
                        },
                        {
                            "@class": "ResourceDescriptor",
                            "name": "Sébastien",
                            "label": "Sébastien",
                            "defaultInstance": {
                                "@class": "ResourceInstance",
                                "assignments": [],
                                "occupations": [],
                                "activities": [],
                                "active": true,
                                "skillsets": {
                                    "Informaticien Logiciel": 8
                                },
                                "properties": {
                                    "activityRate": "80",
                                    "wage": "9500"
                                },
                                "moral": 7,
                                "moralHistory": [
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    10,
                                    10,
                                    8,
                                    8,
                                    8,
                                    8,
                                    8,
                                    8,
                                    8,
                                    7,
                                    7,
                                    9,
                                    9,
                                    6,
                                    5,
                                    5,
                                    5,
                                    7,
                                    7,
                                    7,
                                    7
                                ],
                                "confidence": null,
                                "confidenceHistory": [
                                    0,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null
                                ]
                            },
                            "scope": {
                                "@class": "TeamScope",
                                "broadcastScope": "TeamScope"
                            },
                            "description": "",
                            "properties": {
                                "coef_activity": "1",
                                "coef_moral": "1",
                                "maxBilledUnworkedHours": "0",
                                "planningAvailability": "false",
                                "engagementDelay": "3"
                            }
                        }
                    ]
                },
                {
                    "@class": "ListDescriptor",
                    "name": "monteur",
                    "label": "Monteur",
                    "defaultInstance": {
                        "@class": "ListInstance"
                    },
                    "scope": {
                        "@class": "TeamScope",
                        "broadcastScope": "TeamScope"
                    },
                    "items": [
                        {
                            "@class": "ResourceDescriptor",
                            "name": "Quentin",
                            "label": "Quentin",
                            "defaultInstance": {
                                "@class": "ResourceInstance",
                                "assignments": [],
                                "occupations": [],
                                "activities": [],
                                "active": true,
                                "skillsets": {
                                    "Monteur": 2
                                },
                                "properties": {
                                    "activityRate": "100",
                                    "wage": "6000"
                                },
                                "moral": 6,
                                "moralHistory": [
                                    10,
                                    10,
                                    8,
                                    8,
                                    8,
                                    8,
                                    8,
                                    8,
                                    8,
                                    9,
                                    9,
                                    6,
                                    5,
                                    5,
                                    5,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    6,
                                    6
                                ],
                                "confidence": null,
                                "confidenceHistory": [
                                    0,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null
                                ]
                            },
                            "scope": {
                                "@class": "TeamScope",
                                "broadcastScope": "TeamScope"
                            },
                            "description": "",
                            "properties": {
                                "coef_activity": "1",
                                "coef_moral": "1",
                                "maxBilledUnworkedHours": "0",
                                "planningAvailability": "false",
                                "engagementDelay": "0"
                            }
                        },
                        {
                            "@class": "ResourceDescriptor",
                            "name": "Wolf",
                            "label": "Wolf",
                            "defaultInstance": {
                                "@class": "ResourceInstance",
                                "assignments": [],
                                "occupations": [],
                                "activities": [],
                                "active": true,
                                "skillsets": {
                                    "Monteur": 5
                                },
                                "properties": {
                                    "activityRate": "100",
                                    "wage": "7500"
                                },
                                "moral": 7,
                                "moralHistory": [
                                    8,
                                    8,
                                    8,
                                    8,
                                    8,
                                    8,
                                    8,
                                    9,
                                    9,
                                    6,
                                    5,
                                    5,
                                    5,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    6,
                                    6,
                                    10,
                                    7,
                                    7
                                ],
                                "confidence": null,
                                "confidenceHistory": [
                                    0,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null
                                ]
                            },
                            "scope": {
                                "@class": "TeamScope",
                                "broadcastScope": "TeamScope"
                            },
                            "description": "",
                            "properties": {
                                "coef_activity": "1",
                                "coef_moral": "1",
                                "maxBilledUnworkedHours": "0",
                                "planningAvailability": "false",
                                "engagementDelay": "0"
                            }
                        }
                    ]
                },
                {
                    "@class": "ListDescriptor",
                    "name": "webDesigner",
                    "label": "Web Designer",
                    "defaultInstance": {
                        "@class": "ListInstance"
                    },
                    "scope": {
                        "@class": "TeamScope",
                        "broadcastScope": "TeamScope"
                    },
                    "items": [
                        {
                            "@class": "ResourceDescriptor",
                            "name": "Karim",
                            "label": "Karim",
                            "defaultInstance": {
                                "@class": "ResourceInstance",
                                "assignments": [],
                                "occupations": [],
                                "activities": [],
                                "active": true,
                                "skillsets": {
                                    "Web Designer": 2
                                },
                                "properties": {
                                    "activityRate": "100",
                                    "wage": "7500"
                                },
                                "moral": 7,
                                "moralHistory": [
                                    9,
                                    9,
                                    6,
                                    5,
                                    5,
                                    5,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    6,
                                    6,
                                    10,
                                    7,
                                    7,
                                    8,
                                    8,
                                    8,
                                    8,
                                    8,
                                    8,
                                    7,
                                    7
                                ],
                                "confidence": null,
                                "confidenceHistory": [
                                    0,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null
                                ]
                            },
                            "scope": {
                                "@class": "TeamScope",
                                "broadcastScope": "TeamScope"
                            },
                            "description": "",
                            "properties": {
                                "coef_activity": "1",
                                "coef_moral": "1",
                                "maxBilledUnworkedHours": "0",
                                "planningAvailability": "false",
                                "engagementDelay": "0"
                            }
                        },
                        {
                            "@class": "ResourceDescriptor",
                            "name": "Valérie",
                            "label": "Valérie",
                            "defaultInstance": {
                                "@class": "ResourceInstance",
                                "assignments": [],
                                "occupations": [],
                                "activities": [],
                                "active": true,
                                "skillsets": {
                                    "Web Designer": 5
                                },
                                "properties": {
                                    "activityRate": "80",
                                    "wage": "7500"
                                },
                                "moral": 7,
                                "moralHistory": [
                                    6,
                                    5,
                                    5,
                                    5,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    6,
                                    6,
                                    10,
                                    7,
                                    7,
                                    8,
                                    8,
                                    8,
                                    8,
                                    8,
                                    8,
                                    7,
                                    7,
                                    9,
                                    7,
                                    7
                                ],
                                "confidence": null,
                                "confidenceHistory": [
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null
                                ]
                            },
                            "scope": {
                                "@class": "TeamScope",
                                "broadcastScope": "TeamScope"
                            },
                            "description": "",
                            "properties": {
                                "coef_activity": "1",
                                "coef_moral": "1",
                                "maxBilledUnworkedHours": "0",
                                "planningAvailability": "false",
                                "engagementDelay": "0"
                            }
                        },
                        {
                            "@class": "ResourceDescriptor",
                            "name": "Orianne",
                            "label": "Orianne",
                            "defaultInstance": {
                                "@class": "ResourceInstance",
                                "assignments": [],
                                "occupations": [],
                                "activities": [],
                                "active": false,
                                "skillsets": {
                                    "Web Designer": 8
                                },
                                "properties": {
                                    "activityRate": "80",
                                    "wage": "8400"
                                },
                                "moral": 8,
                                "moralHistory": [
                                    8,
                                    8,
                                    8,
                                    8,
                                    8,
                                    8,
                                    9,
                                    6,
                                    6,
                                    8,
                                    8,
                                    5,
                                    5,
                                    8,
                                    8,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    7,
                                    8,
                                    8,
                                    8,
                                    8,
                                    8
                                ],
                                "confidence": null,
                                "confidenceHistory": [
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null
                                ]
                            },
                            "scope": {
                                "@class": "TeamScope",
                                "broadcastScope": "TeamScope"
                            },
                            "description": "",
                            "properties": {
                                "coef_activity": "1",
                                "coef_moral": "1",
                                "maxBilledUnworkedHours": "0",
                                "planningAvailability": "false",
                                "engagementDelay": "3"
                            }
                        }
                    ]
                }
            ]
        },
        {
            "@class": "ListDescriptor",
            "name": "timeCards",
            "label": "Time cards",
            "defaultInstance": {
                "@class": "ListInstance"
            },
            "scope": {
                "@class": "TeamScope",
                "broadcastScope": "TeamScope"
            },
            "items": [
                {
                    "@class": "NumberDescriptor",
                    "name": "cardsPhase1",
                    "label": "Cards phase 1",
                    "defaultInstance": {
                        "@class": "NumberInstance",
                        "history": [],
                        "value": 15
                    },
                    "scope": {
                        "@class": "TeamScope",
                        "broadcastScope": "PlayerScope"
                    },
                    "minValue": 0,
                    "maxValue": 15
                },
                {
                    "@class": "NumberDescriptor",
                    "name": "cardsPhase2",
                    "label": "Cards phase 2",
                    "defaultInstance": {
                        "@class": "NumberInstance",
                        "history": [],
                        "value": 7
                    },
                    "scope": {
                        "@class": "TeamScope",
                        "broadcastScope": "PlayerScope"
                    },
                    "minValue": 0,
                    "maxValue": 7
                },
                {
                    "@class": "NumberDescriptor",
                    "name": "cardsPhase3",
                    "label": "Cards phase 3",
                    "defaultInstance": {
                        "@class": "NumberInstance",
                        "history": [],
                        "value": 10
                    },
                    "scope": {
                        "@class": "TeamScope",
                        "broadcastScope": "PlayerScope"
                    },
                    "minValue": 0,
                    "maxValue": 10
                },
                {
                    "@class": "NumberDescriptor",
                    "name": "cardsPhase4",
                    "label": "Cards phase 4",
                    "defaultInstance": {
                        "@class": "NumberInstance",
                        "history": [],
                        "value": 5
                    },
                    "scope": {
                        "@class": "TeamScope",
                        "broadcastScope": "PlayerScope"
                    },
                    "minValue": 0,
                    "maxValue": 5
                }
            ]
        },
        {
            "@class": "ListDescriptor",
            "name": "currentPeriod",
            "label": "Current period",
            "defaultInstance": {
                "@class": "ListInstance"
            },
            "scope": {
                "@class": "TeamScope",
                "broadcastScope": "TeamScope"
            },
            "items": [
                {
                    "@class": "NumberDescriptor",
                    "name": "periodPhase1",
                    "label": "periodPhase1",
                    "defaultInstance": {
                        "@class": "NumberInstance",
                        "history": [],
                        "value": 1
                    },
                    "scope": {
                        "@class": "TeamScope",
                        "broadcastScope": "PlayerScope"
                    },
                    "minValue": 1,
                    "maxValue": 1
                },
                {
                    "@class": "NumberDescriptor",
                    "name": "periodPhase2",
                    "label": "periodPhase2",
                    "defaultInstance": {
                        "@class": "NumberInstance",
                        "history": [],
                        "value": 1
                    },
                    "scope": {
                        "@class": "TeamScope",
                        "broadcastScope": "PlayerScope"
                    },
                    "minValue": 1,
                    "maxValue": 1
                },
                {
                    "@class": "NumberDescriptor",
                    "name": "periodPhase3",
                    "label": "periodPhase3",
                    "defaultInstance": {
                        "@class": "NumberInstance",
                        "history": [],
                        "value": 1
                    },
                    "scope": {
                        "@class": "TeamScope",
                        "broadcastScope": "PlayerScope"
                    },
                    "minValue": 1,
                    "maxValue": 10
                },
                {
                    "@class": "NumberDescriptor",
                    "name": "periodPhase1_4",
                    "label": "periodPhase1_4",
                    "defaultInstance": {
                        "@class": "NumberInstance",
                        "history": [],
                        "value": 1
                    },
                    "scope": {
                        "@class": "TeamScope",
                        "broadcastScope": "PlayerScope"
                    },
                    "minValue": 1,
                    "maxValue": 1
                }
            ]
        },
        {
            "@class": "ListDescriptor",
            "name": "pageUtilities",
            "label": "!! page utilities",
            "defaultInstance": {
                "@class": "ListInstance"
            },
            "scope": {
                "@class": "TeamScope",
                "broadcastScope": "TeamScope"
            },
            "items": [
                {
                    "@class": "NumberDescriptor",
                    "name": "costs",
                    "label": "costs",
                    "defaultInstance": {
                        "@class": "NumberInstance",
                        "history": [],
                        "value": 100
                    },
                    "scope": {
                        "@class": "TeamScope",
                        "broadcastScope": "PlayerScope"
                    },
                    "minValue": 0,
                    "maxValue": 200
                }, {
                    "@class": "NumberDescriptor",
                    "name": "actualCost",
                    "label": "actualCost",
                    "defaultInstance": {
                        "@class": "NumberInstance",
                        "history": [],
                        "value": 0
                    },
                    "scope": {
                        "@class": "TeamScope",
                        "broadcastScope": "PlayerScope"
                    },
                    "minValue": 0,
                    "maxValue": null
                }, {
                    "@class": "NumberDescriptor",
                    "name": "planedValue",
                    "label": "planedValue",
                    "defaultInstance": {
                        "@class": "NumberInstance",
                        "history": [],
                        "value": 0
                    },
                    "scope": {
                        "@class": "TeamScope",
                        "broadcastScope": "PlayerScope"
                    },
                    "minValue": 0,
                    "maxValue": null
                }, {
                    "@class": "NumberDescriptor",
                    "name": "earnedValue",
                    "label": "earnedValue",
                    "defaultInstance": {
                        "@class": "NumberInstance",
                        "history": [],
                        "value": 0
                    },
                    "scope": {
                        "@class": "TeamScope",
                        "broadcastScope": "PlayerScope"
                    },
                    "minValue": 0,
                    "maxValue": null
                }, {
                    "@class": "NumberDescriptor",
                    "name": "quality",
                    "label": "quality",
                    "defaultInstance": {
                        "@class": "NumberInstance",
                        "history": [],
                        "value": 100
                    },
                    "scope": {
                        "@class": "TeamScope",
                        "broadcastScope": "PlayerScope"
                    },
                    "minValue": 0,
                    "maxValue": 200
                },
                {
                    "@class": "NumberDescriptor",
                    "name": "delay",
                    "label": "delay",
                    "defaultInstance": {
                        "@class": "NumberInstance",
                        "history": [],
                        "value": 100
                    },
                    "scope": {
                        "@class": "TeamScope",
                        "broadcastScope": "PlayerScope"
                    },
                    "minValue": 0,
                    "maxValue": 200
                },
                {
                    "@class": "NumberDescriptor",
                    "name": "ganttPage",
                    "label": "ganttPage",
                    "defaultInstance": {
                        "@class": "NumberInstance",
                        "history": [],
                        "value": 4
                    },
                    "scope": {
                        "@class": "TeamScope",
                        "broadcastScope": "PlayerScope"
                    },
                    "minValue": null,
                    "maxValue": null
                },
                {
                    "@class": "NumberDescriptor",
                    "name": "taskPage",
                    "label": "taskPage",
                    "defaultInstance": {
                        "@class": "NumberInstance",
                        "history": [],
                        "value": 3
                    },
                    "scope": {
                        "@class": "TeamScope",
                        "broadcastScope": "PlayerScope"
                    },
                    "minValue": null,
                    "maxValue": null
                }
            ]
        }
    ],
    "scriptLibrary": {
        "default": {
            "@class": "GameModelContent",
            "contentType": null,
            "content": "importPackage(javax.naming);\r\nvar gm = self.getGameModel(), testMode = false;\r\nsteps = 10, minTaskDuration = 0.1;\r\n\r\nfunction nextPeriod() {\r\n    var time = getCurrentInGameTime(), phase = VariableDescriptorFacade.findByName(gm, 'currentPhase'),\r\n            ganttPage, taskPage;\r\n    phases = VariableDescriptorFacade.findByName(gm, 'currentPeriod');\r\n    if (time.period === parseInt(phases.items.get(time.phase).getMaxValue())) { // if end of phase\r\n        phases.items.get(time.phase).getInstance(self).setValue(1);\r\n        phase.getInstance(self).setValue(time.phase + 1);\r\n        if (parseInt(phase.getInstance(self).getValue()) === 2) {\r\n            ganttPage = VariableDescriptorFacade.findByName(gm, 'ganttPage');\r\n            ganttPage.getInstance(self).setValue(11);\r\n            taskPage = VariableDescriptorFacade.findByName(gm, 'taskPage');\r\n            taskPage.getInstance(self).setValue(12);\r\n        }\r\n    } else if (time.phase === 2) { //if current phase is the 'realisation' phase\r\n        completeRealizationPeriod();\r\n        if (checkEndOfProject()) { //if the project ended\r\n            phases.items.get(time.phase).getInstance(self).setValue(1);\r\n            phase.getInstance(self).setValue(time.phase + 1);\r\n        } else {\r\n            phases.items.get(time.phase).getInstance(self).setValue(time.period + 1);\r\n        }\r\n        setWeekliesVariables();\r\n    } else {\r\n        phases.items.get(time.phase).getInstance(self).setValue(time.period + 1);\r\n    }\r\n}\r\n\r\nfunction checkEndOfProject() {\r\n    var i, taskInst, tasks = VariableDescriptorFacade.findByName(gm, 'tasks'), isTheEnd = true;\r\n    for (i = 0; i < tasks.items.size(); i++) {\r\n        taskInst = tasks.items.get(i).getInstance(self);\r\n        if (isTrue(taskInst.getActive()) && parseInt(taskInst.getProperty('completeness')) < 100) {\r\n            isTheEnd = false;\r\n            break;\r\n        }\r\n    }\r\n    return isTheEnd;\r\n}\r\n\r\nfunction completeRealizationPeriod() {\r\n    var i;\r\n    if (testMode) {\r\n        println('==============================');\r\n        println('==============================');\r\n    }\r\n    for (i = 0; i < steps; i++) {\r\n        calculTasksProgress(i);\r\n        if (testMode) {\r\n            println('---');\r\n        }\r\n    }\r\n}\r\n\r\nfunction setWeekliesVariables() {\r\n    var i, taskInst, ev = 0, pv = 0, ac = 0, tasks = VariableDescriptorFacade.findByName(gm, 'tasks'),\r\n            costs = VariableDescriptorFacade.findByName(self.getGameModel(), 'costs'),\r\n            delay = VariableDescriptorFacade.findByName(self.getGameModel(), 'delay'),\r\n            quality = VariableDescriptorFacade.findByName(self.getGameModel(), 'quality');\r\n    for (i = 0; i < tasks.items.size(); i++) {\r\n        taskInst = tasks.items.get(i).getInstance(self);\r\n        if (isTrue(taskInst.getActive())) {\r\n            ev += parseInt(taskInst.getProperty('bac')) * (getPlannifiedCompleteness(taskInst) / 100);\r\n            pv += parseInt(taskInst.getProperty('bac')) * (parseInt(taskInst.getProperty('completeness')) / 100);\r\n            ac += parseInt(taskInst.getProperty('wages')) + (parseInt(taskInst.getProperty('completeness')) / 100) * parseInt(taskInst.getProperty('fixedCosts')) + parseInt(taskInst.getProperty('unworkedHoursCosts'));\r\n        }\r\n    }\r\n\r\n    planedValue.setValue(pv);\r\n    earnedValue.setValue(ev);\r\n    actualCost.setValue(ac);\r\n\r\n    updateGauges();\r\n\r\n    costs.getInstance(self).saveHistory();\r\n    delay.getInstance(self).saveHistory();\r\n    quality.getInstance(self).saveHistory();\r\n    planedValue.saveHistory();\r\n    earnedValue.saveHistory();\r\n    actualCost.saveHistory();\r\n}\r\n\r\nfunction updateGauges() {\r\n    var i, j, taskInst, tasks = VariableDescriptorFacade.findByName(gm, 'tasks'),\r\n            costs = VariableDescriptorFacade.findByName(self.getGameModel(), 'costs'),\r\n            delay = VariableDescriptorFacade.findByName(self.getGameModel(), 'delay'),\r\n            quality = VariableDescriptorFacade.findByName(self.getGameModel(), 'quality'),\r\n            tasksQuality = 0, nomberOfBeganTasks = 0, tasksScale = 0, nomberOfEmployeeRequired,\r\n            costsJaugeValue, qualityJaugeValue, delayJaugeValue, qualityJaugeValue = 0;\r\n\r\n    for (i = 0; i < tasks.items.size(); i++) {\r\n        taskInst = tasks.items.get(i).getInstance(self);\r\n        if (isTrue(taskInst.getActive())) {//if task is active\r\n            if (parseInt(taskInst.getProperty('completeness')) > 0) { //...and started\r\n                //tasksQuality += parseInt(taskInst.getProperty('quality'));\r\n                nomberOfBeganTasks += 1;\r\n                nomberOfEmployeeRequired = 0;\r\n                for (j = 0; j < taskInst.getRequirements().size(); j++) {\r\n                    nomberOfEmployeeRequired += parseInt(taskInst.getRequirements().get(j).getQuantity());\r\n                }\r\n                tasksScale += parseInt(taskInst.getDuration()) * nomberOfEmployeeRequired;\r\n                tasksQuality = parseInt(taskInst.getProperty('quality')) * parseInt(taskInst.getDuration()) * nomberOfEmployeeRequired;\r\n            }\r\n        }\r\n    }\r\n\r\n    //costs\r\n    if (parseInt(planedValue.value) > 0) {\r\n        costsJaugeValue = Math.round((parseInt(earnedValue.value) / parseInt(actualCost.value)) * 100);\r\n    }\r\n    costsJaugeValue = (costsJaugeValue > parseInt(costs.getMinValue())) ? costsJaugeValue : parseInt(costs.getMinValue());\r\n    costsJaugeValue = (costsJaugeValue < parseInt(costs.getMaxValue())) ? costsJaugeValue : parseInt(costs.getMaxValue());\r\n    costs.getInstance(self).setValue(costsJaugeValue);\r\n\r\n    //delay\r\n    delayJaugeValue = Math.round(parseInt((earnedValue.value) / parseInt(planedValue.value)) * 100);\r\n    delayJaugeValue = (delayJaugeValue > parseInt(delay.getMinValue())) ? delayJaugeValue : parseInt(delay.getMinValue());\r\n    delayJaugeValue = (delayJaugeValue < parseInt(delay.getMaxValue())) ? delayJaugeValue : parseInt(delay.getMaxValue());\r\n    delay.getInstance(self).setValue(delayJaugeValue);\r\n\r\n    //quality\r\n    //with weighting of task's scale\r\n    if (tasksScale > 0) {\r\n        qualityJaugeValue = (tasksQuality / tasksScale);\r\n    }\r\n    //whitout weighting of task's scale\r\n//    if (nomberOfBeganTasks > 0) {\r\n//        qualityJaugeValue = tasksQuality / nomberOfBeganTasks;\r\n//    }\r\n    qualityJaugeValue += parseInt(qualityImpacts.value) / 2;\r\n    println(qualityJaugeValue);\r\n    qualityJaugeValue = (qualityJaugeValue > parseInt(quality.getMinValue())) ? qualityJaugeValue : parseInt(quality.getMinValue());\r\n    qualityJaugeValue = (qualityJaugeValue < parseInt(quality.getMaxValue())) ? qualityJaugeValue : parseInt(quality.getMaxValue());\r\n    quality.getInstance(self).setValue(qualityJaugeValue);\r\n}\r\n\r\nfunction getPlannifiedCompleteness(taskInst) {\r\n    var i, planif = taskInst.getPlannification(), planifArray = [],\r\n            time = getCurrentInGameTime(), pastPeriods = 0;\r\n    for (i = 0; i < planif.size(); i++) {\r\n        planifArray.push(parseInt(planif.get(i)));\r\n    }\r\n    for (i = 0; i <= time.period; i++) {\r\n        if (planifArray.indexOf(i) > -1) {\r\n            pastPeriods += 1;\r\n        }\r\n    }\r\n    return (planifArray.length > 0) ? (pastPeriods / planifArray.length) * 100 : 0;\r\n}\r\n\r\nfunction getCurrentTaskDelay(taskDesc) {\r\n    var planif, delay = 0, planif = taskDesc.getInstance(self).getPlannification(),\r\n            completeness = parseInt(taskDesc.getInstance(self).getProperty('completeness')),\r\n            planifiedCompleteness = getPlannifiedCompleteness(taskDesc.getInstance(self));\r\n    if (completeness > 0 && planif.length > 0) {\r\n        if (planifiedCompleteness <= 0) {\r\n            delay = completeness + 100;\r\n        }\r\n        else {\r\n            delay = (100 / planifiedCompleteness) * completeness;\r\n        }\r\n    }\r\n    return delay;\r\n}\r\n\r\nfunction calculTasksProgress(currentStep) {\r\n    var i, work, activitiesAsNeeds, oneTaskPerActivity, allCurrentActivities,\r\n            taskProgress, allCurrentActivities,\r\n            requirementsByWork, taskInst;\r\n    allCurrentActivities = createActivities(currentStep);\r\n    activitiesAsNeeds = getActivitiesWithEmployeeOnDifferentNeeds(allCurrentActivities);\r\n    for (i = 0; i < activitiesAsNeeds.length; i++) { //for each need\r\n        calculateProgressOfNeed(activitiesAsNeeds[i], allCurrentActivities);\r\n    }\r\n    oneTaskPerActivity = getUniqueTasksInActivities(activitiesAsNeeds);\r\n    for (i = 0; i < oneTaskPerActivity.length; i++) {\r\n        taskProgress = 0;\r\n        taskInst = oneTaskPerActivity[i].getTaskDescriptor().getInstance(self);\r\n        requirementsByWork = getRequirementsByWork(taskInst.getRequirements());\r\n        for (work in requirementsByWork) {\r\n            taskProgress += requirementsByWork[work].completeness;\r\n        }\r\n        taskProgress = (taskProgress > 97) ? 100 : taskProgress; //>97 yes, don t frustrate the players please.\r\n        taskInst.setProperty('completeness', Math.round(taskProgress));\r\n        taskInst.setProperty('quality', calculateTaskQuality(oneTaskPerActivity[i].getTaskDescriptor()));\r\n    }\r\n    checkEnd(allCurrentActivities, currentStep);\r\n}\r\n\r\nfunction getUniqueTasksInActivities(activities) {\r\n    var i, j, oneTaskPerActivity = [], wasAdded;\r\n    if (activities.length > 0) {\r\n        oneTaskPerActivity.push(activities[0]);\r\n    }\r\n    for (i = 0; i < activities.length; i++) {\r\n        wasAdded = false;\r\n        for (j = 0; j < oneTaskPerActivity.length; j++) {\r\n            if (oneTaskPerActivity[j].getTaskDescriptor() === activities[i].getTaskDescriptor()) {\r\n                wasAdded = true;\r\n                break;\r\n            }\r\n        }\r\n        if (!wasAdded) {\r\n            oneTaskPerActivity.push(activities[i]);\r\n        }\r\n    }\r\n    return oneTaskPerActivity;\r\n}\r\n\r\nfunction getActivitiesWithEmployeeOnDifferentNeeds(activities) {\r\n    var i, j, activitiesAsNeeds = [], wasAdded;\r\n    if (activities.length > 0) {\r\n        activitiesAsNeeds.push(activities[0]);\r\n    }\r\n    for (i = 1; i < activities.length; i++) { //for each need\r\n        wasAdded = false;\r\n        if (getActivitiesWithEmployeeOnSameNeed(activities, activities[i]).length > 1) {\r\n            for (j = 1; j < activitiesAsNeeds.length; j++) {\r\n                if (activities[i] === activitiesAsNeeds[j]) {\r\n                    wasAdded = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (!wasAdded) {\r\n            activitiesAsNeeds.push(activities[i]);\r\n        }\r\n    }\r\n    return activitiesAsNeeds;\r\n}\r\n\r\nfunction getActivitiesWithEmployeeOnSameNeed(activities, activity) {\r\n    var i, employeeInst, selectedReq, sortedActivities = [], selectedReqI;\r\n    employeeInst = activity.getResourceInstance();\r\n    selectedReq = activity.getRequirement();\r\n    for (i = 0; i < activities.length; i++) {\r\n        if (parseFloat(activity.getTime()) === parseFloat(activities[i].getTime()) && activity.getTaskDescriptor() === activities[i].getTaskDescriptor()) {\r\n            selectedReqI = activities[i].getRequirement();\r\n            if (selectedReq === selectedReqI) {\r\n                sortedActivities.push(activities[i]);\r\n            }\r\n        }\r\n    }\r\n    return sortedActivities;\r\n}\r\n\r\nfunction createActivities(currentStep) {\r\n    var i, listEmployees = flattenList(VariableDescriptorFacade.findByName(gm, 'employees')),\r\n            employeeDesc, employeeInst, activity, activities = [], assignables,\r\n            existanteActivity, time = getCurrentInGameTime().period + currentStep / 10;\r\n    if (!listEmployees) {\r\n        return activities;\r\n    }\r\n    for (i = 0; i < listEmployees.length; i++) {\r\n        employeeDesc = listEmployees[i];\r\n        employeeInst = employeeDesc.getInstance(self);\r\n        if (isReservedToWork(employeeInst)) { //have a 'player created' occupation\r\n            assignables = checkAssignments(employeeInst.getAssignments(), currentStep);\r\n            if (assignables.length > 0) { //have assignable tasks\r\n                existanteActivity = findLastStepCorrespondingActivity(employeeInst, assignables[0].getTaskDescriptor(), time);\r\n                if (existanteActivity) { //set corresponding past activity if it existe. Else create it.\r\n                    activity = existanteActivity;\r\n                } else {\r\n                    activity = employeeInst.createActivity(assignables[0].getTaskDescriptor());\r\n                }\r\n                activity.setRequirement(selectRequirementFromActivity(activity));\r\n                activity.setTime(time);\r\n                activities.push(activity);\r\n            }\r\n        }\r\n    }\r\n    return activities;\r\n}\r\n\r\nfunction selectRequirementFromActivity(activity) {\r\n    var selectedReq, workAs, taskInst, reqByWorks;\r\n    taskInst = activity.getTaskDescriptor().getInstance(self);\r\n    reqByWorks = getRequirementsByWork(taskInst.getRequirements());\r\n    workAs = selectFirstUncompletedWork(taskInst.getRequirements(), reqByWorks);\r\n    selectedReq = selectRequirement(taskInst, activity.getResourceInstance(), workAs, reqByWorks);\r\n    return selectedReq;\r\n}\r\n\r\nfunction findLastStepCorrespondingActivity(employeeInst, taskDesc, currentPeriod) {\r\n    var i, activity, occurence = null;\r\n    for (i = 0; i < employeeInst.getActivities().size(); i++) {\r\n        activity = employeeInst.getActivities().get(i);\r\n        if (activity.getTaskDescriptor() === taskDesc   //if the task of activity match with the given task (same task and same employee == same activity) \r\n                && currentPeriod - Math.floor(currentPeriod) !== 0 //if it s not a new period (current step !== 0) \r\n                && parseFloat(activity.getTime()) === getFloat(currentPeriod - 0.1)) { //if activity was used the last step\r\n            occurence = activity;\r\n            break;\r\n        }\r\n    }\r\n    return occurence;\r\n}\r\n\r\nfunction haveCorrespondingActivityInPast(employeeInst, taskDesc, currentPeriod) {\r\n    var i, activity, occurence = false;\r\n    for (i = 0; i < employeeInst.getActivities().size(); i++) {\r\n        activity = employeeInst.getActivities().get(i);\r\n        if (activity.getTaskDescriptor() === taskDesc   //if the task of activity match with the given task (same task and same employee == same activity)\r\n                && currentPeriod > parseFloat(activity.getTime())) {\r\n            occurence = true;\r\n            break;\r\n        }\r\n    }\r\n    return occurence;\r\n}\r\n\r\nfunction isReservedToWork(employeeInst) {\r\n    var i, occupations = employeeInst.getOccupations(),\r\n            time = getCurrentInGameTime(), reservedToWork = false;\r\n    for (i = 0; i < occupations.size(); i++) {\r\n        if (parseInt(occupations.get(i).getTime()) === time.period && isTrue(occupations.get(i).getEditable())) {\r\n            reservedToWork = true;\r\n        }\r\n    }\r\n    return reservedToWork;\r\n}\r\n\r\nfunction getAssignables(assignments) {\r\n    var i, taskDesc, assignables = [], work;\r\n    for (i = 0; i < assignments.size(); i++) {\r\n        work = null;\r\n        taskDesc = assignments.get(i).getTaskDescriptor();\r\n        if (parseInt(taskDesc.getInstance(self).getProperty('completeness')) < 100 && getPredecessorFactor(taskDesc) >= 0.2) { //if the task isn t terminated and average of predecessors advancement is upper than 20% \r\n            assignables.push(assignments.get(i));\r\n        }\r\n    }\r\n    return assignables;\r\n}\r\n\r\nfunction checkAssignments(assignments, currentStep) {\r\n    var i, taskDesc, employeeInst, employeeName,\r\n            employeeJob, taskInst, nextTasks;\r\n    if (assignments.size() <= 0) {\r\n        return [];\r\n    }\r\n    employeeInst = assignments.get(0).getResourceInstance();\r\n    employeeName = employeeInst.getDescriptor().getLabel();\r\n    employeeJob = employeeInst.getSkillsets().keySet().toArray()[0];\r\n    nextTasks = getAssignables(employeeInst.getAssignments());\r\n    for (i = 0; i < assignments.size(); i++) {\r\n        taskDesc = assignments.get(i).getTaskDescriptor();\r\n        taskInst = taskDesc.getInstance();\r\n        if (parseFloat(taskInst.getProperty('completeness')) >= 100) {\r\n            if (nextTasks[0]) {\r\n                sendMessage(getStepName(currentStep) + ') Fin de la tâche : ' + taskDesc.getLabel(),\r\n                        'La tâche ' + taskDesc.getLabel() + ' est terminée, je passe à la tâche ' + nextTasks[0].getTaskDescriptor().getLabel() + ' <br/> Salutations <br/>' + employeeName + '<br/> ' + employeeJob,\r\n                        employeeName);\r\n            } else {\r\n                sendMessage(getStepName(currentStep) + ') Fin de la tâche : ' + taskDesc.getLabel(),\r\n                        'La tâche ' + taskDesc.getLabel() + ' est terminée, je retourne à mon activitié traditionnelle. <br/> Salutations <br/>' + employeeName + '<br/> ' + employeeJob,\r\n                        employeeName);\r\n            }\r\n            assignments.remove(i);\r\n            break;\r\n        } else if (getPredecessorFactor(taskDesc) <= 0.2) {\r\n            sendMessage(getStepName(currentStep) + ') Impossible de progresser sur la tâche : ' + taskDesc.getLabel(),\r\n                    'Je suis sensé travailler sur la tâche ' + taskDesc.getLabel() + ' mais les tâches précedentes ne sont pas assez avancées. <br/> Je retourne donc à mes occupations habituel. <br/> Salutations <br/>' + employeeName + '<br/> ' + employeeJob,\r\n                    employeeName);\r\n            assignments.remove(i);\r\n            break;\r\n        }\r\n    }\r\n    return nextTasks;\r\n}\r\n\r\nfunction getPredecessorFactor(taskDesc) {\r\n    var i, predecessorsAdvancements, predecessors, average, numberOfPredecessors;\r\n    predecessorsAdvancements = 0;\r\n    numberOfPredecessors = 0;\r\n    predecessors = taskDesc.getPredecessors();\r\n    for (i = 0; i < predecessors.size(); i++) {\r\n        if (isTrue(predecessors.get(i).getInstance(self).getActive())) {\r\n            predecessorsAdvancements += parseInt(predecessors.get(i).getInstance(self).getProperty('completeness'));\r\n            numberOfPredecessors += 1;\r\n        }\r\n    }\r\n    if (numberOfPredecessors > 0) {\r\n        average = predecessorsAdvancements / numberOfPredecessors;\r\n    } else {\r\n        average = 100;\r\n    }\r\n    return Math.pow(average / 100, parseInt(taskDesc.getInstance(self).getProperty('predecessorsDependances')));\r\n}\r\n\r\nfunction selectFirstUncompletedWork(requirements, reqByWorks) {\r\n    var work, firstUncompletedWork;\r\n    if (!reqByWorks) {\r\n        reqByWorks = getRequirementsByWork(requirements); // get requirements merged by kind of work. \r\n    }\r\n    for (work in reqByWorks) {\r\n        if (reqByWorks[work].completeness < reqByWorks[work].maxLimit) { //check if the maximum limite from all requirements of the current kind of work is smaller than the completeness of the current kind of work\r\n            firstUncompletedWork = work;\r\n            break;\r\n        }\r\n    }\r\n    return firstUncompletedWork;\r\n}\r\n\r\nfunction selectRequirement(taskInst, employeeInst, workAs, reqByWorks) {\r\n    var i, requirements = taskInst.getRequirements(), req, selectedReq = null,\r\n            totalOfPersonneInTask = 0, deltaLevel = 1000,\r\n            level = parseInt(employeeInst.getSkillsets().get(employeeInst.getSkillsets().keySet().toArray()[0]));\r\n    for (i = 0; i < requirements.size(); i++) {\r\n        totalOfPersonneInTask += parseInt(requirements.get(i).getQuantity());\r\n    }\r\n    for (i = 0; i < requirements.size(); i++) {\r\n        req = requirements.get(i);\r\n        if (req.getWork() == workAs && req.getCompleteness() < (reqByWorks[workAs].maxLimit * totalOfPersonneInTask / reqByWorks[workAs].totalOfEmployees)) {\r\n            if (Math.abs(deltaLevel) > level - parseInt(req.getLevel())) {\r\n                deltaLevel = level - parseInt(req.getLevel());\r\n                selectedReq = req;\r\n            }\r\n        }\r\n    }\r\n    return selectedReq;\r\n}\r\n\r\nfunction getRequirementsByWork(requirements) {\r\n    var i, req, works = {}, work, needsCompletion = 0, totalOfEmployees = 0;\r\n    for (i = 0; i < requirements.size(); i++) {\r\n        req = requirements.get(i);\r\n        //keep an occurance of each kind of work needed\r\n        if (works[req.getWork()]) {\r\n            work = works[req.getWork()];\r\n        } else {\r\n            work = works[req.getWork()] = {\r\n                maxLimit: 0,\r\n                typesOfLevels: [],\r\n                totalOfEmployees: 0,\r\n                completeness: 0\r\n            };\r\n        }\r\n        //keep the highest limit of all limits from each kind of work needed\r\n        if (work.maxLimit < parseInt(req.getLimit())) {\r\n            work.maxLimit = parseInt(req.getLimit());\r\n        }\r\n        //keep all kind of levels for each kind of work needed\r\n        if (work.typesOfLevels.indexOf(req.getLevel()) <= -1) {\r\n            work.typesOfLevels.push(req.getLevel());\r\n        }\r\n        //keep the summe of personns needed for each kind of work needed\r\n        totalOfEmployees += parseInt(req.getQuantity());\r\n        //is needed for next calcul\r\n        needsCompletion += (parseInt(req.getCompleteness()) * parseInt(req.getQuantity()));\r\n    }\r\n    for (work in works) {\r\n        //keep the summe of personns needed for each kind of work needed\r\n        works[work].totalOfEmployees = totalOfEmployees;\r\n        //keep the work completion for each kind of work needed\r\n        works[work].completeness = (needsCompletion / totalOfEmployees);\r\n    }\r\n    return works;\r\n}\r\n\r\nfunction calculateProgressOfNeed(activityAsNeeds, allCurrentActivities) {\r\n    var i, taskDesc, taskInst, employeeDesc, employeeInst, activityRate, sameNeedActivity,\r\n            affectedEmployeesDesc = [], requirements, stepAdvance = 1, sumActivityRate = 0,\r\n            employeesMotivationXActivityRate = 0, deltaLevel, workAs, selectedReq,\r\n            employeesMotivationFactor, employeesSkillsetXActivityRate = 0, predecessorsAdvance = 1,\r\n            employeeSkillsetFactor, activityCoefficientXActivityRate = 0, otherWorkFactor = 1,\r\n            correctedRessources, reqByWorks, numberOfEmployeeOnNeedOnNewTask = 0,\r\n            needProgress, motivationXActivityRate = 0, skillsetXActivityRate = 0, level,\r\n            averageSkillsetQuality, stepQuality;\r\n\r\n    taskDesc = activityAsNeeds.getTaskDescriptor();\r\n    taskInst = taskDesc.getInstance(self);\r\n    requirements = taskInst.getRequirements();\r\n    reqByWorks = getRequirementsByWork(requirements);\r\n    selectedReq = activityAsNeeds.getRequirement();\r\n    workAs = selectedReq.getWork();\r\n    sameNeedActivity = getActivitiesWithEmployeeOnSameNeed(allCurrentActivities, activityAsNeeds);\r\n    level = parseInt(activityAsNeeds.getResourceInstance().getSkillsets().get(activityAsNeeds.getResourceInstance().getSkillsets().keySet().toArray()[0]));\r\n    deltaLevel = parseInt(selectedReq.getLevel()) - level;\r\n\r\n    //For each need\r\n    for (i = 0; i < sameNeedActivity.length; i++) {\r\n        employeeInst = sameNeedActivity[i].getResourceInstance();\r\n        employeeDesc = employeeInst.getDescriptor();\r\n        affectedEmployeesDesc.push(employeeDesc);\r\n        activityRate = parseFloat(employeeDesc.getInstance(self).getProperty('activityRate'));\r\n        sumActivityRate += activityRate;\r\n        //Calculate ressource motivation factor\r\n        employeesMotivationFactor = 1 + 0.05 * parseFloat(employeeDesc.getProperty('coef_moral')) * (parseInt(employeeDesc.getInstance(self).getMoral()) - 7);\r\n        //Calcul variables for needMotivationFactor\r\n        employeesMotivationXActivityRate += employeesMotivationFactor * activityRate;\r\n        //Calcul variables for needSkillsetFactor\r\n        if (deltaLevel > 0) {\r\n            employeeSkillsetFactor = 1 + 0.05 * parseFloat(taskDesc.getProperty('competenceRatioSup')) * deltaLevel;\r\n            if (employeeSkillsetFactor < 0) {\r\n                employeeSkillsetFactor = 0;\r\n            }\r\n        } else {\r\n            employeeSkillsetFactor = 1 + 0.05 * parseFloat(taskDesc.getProperty('competenceRatioInf')) * deltaLevel;\r\n        }\r\n        employeesSkillsetXActivityRate += employeeSkillsetFactor * activityRate;\r\n        //Calcul variable for needSkillsetFactor\r\n        activityCoefficientXActivityRate += parseFloat(employeeDesc.getProperty('coef_activity')) * activityRate;\r\n        //Calcul variable for learnFactor\r\n        if (!haveCorrespondingActivityInPast(employeeInst, taskDesc, getCurrentInGameTime().period)) {\r\n            numberOfEmployeeOnNeedOnNewTask++;\r\n        }\r\n        //Calculate variable for quality\r\n        motivationXActivityRate += parseInt(employeeInst.getMoral()) * activityRate;\r\n        skillsetXActivityRate += parseInt(employeeInst.getSkillsets().get(employeeInst.getSkillsets().keySet().toArray()[0])) * activityRate; //level * activityRate\r\n    }\r\n\r\n    //calculate needMotivationFactor, needSkillsetFactor and activityNeedRateFactor\r\n    if (sumActivityRate !== 0) {\r\n        stepAdvance *= employeesMotivationXActivityRate / sumActivityRate; //needMotivationFactor\r\n        stepAdvance *= employeesMotivationXActivityRate / sumActivityRate; //needSkillsetFactor\r\n        stepAdvance *= activityCoefficientXActivityRate / sumActivityRate; //activityNeedRateFactor\r\n    }\r\n\r\n    // calculate baseAdvance\r\n    stepAdvance *= 1 / (steps * (parseInt(taskDesc.getInstance(self).getDuration()))); //baseAdvance\r\n\r\n    // calculate numberOfRessourcesFactor\r\n    if (reqByWorks[workAs].totalOfEmployees !== 0) {\r\n        if (affectedEmployeesDesc.length <= reqByWorks[workAs].totalOfEmployees) {\r\n            correctedRessources = reqByWorks[workAs].totalOfEmployees + parseFloat(taskDesc.getProperty('coordinationRatioInf')) * (affectedEmployeesDesc.length - reqByWorks[workAs].totalOfEmployees);\r\n            if (correctedRessources / affectedEmployeesDesc.length < 0.2) {\r\n                correctedRessources = 0.2 * affectedEmployeesDesc.length;\r\n            }\r\n        } else {\r\n            correctedRessources = reqByWorks[workAs].totalOfEmployees + parseFloat(taskDesc.getProperty('coordinationRatioSup')) * (affectedEmployeesDesc.length - reqByWorks[workAs].totalOfEmployees);\r\n        }\r\n        stepAdvance *= correctedRessources / reqByWorks[workAs].totalOfEmployees; //numberOfRessourcesFactor\r\n    }\r\n\r\n    //calculate otherWorkFactor\r\n    if (activityAsNeeds.getResourceInstance().getSkillsets().keySet().toArray()[0] != workAs) {\r\n        otherWorkFactor = 0.8;\r\n    }\r\n    stepAdvance *= otherWorkFactor;\r\n\r\n    //calculate randomFactor\r\n    stepAdvance *= getRandomFactorFromTask(taskDesc);\r\n\r\n    //calculate learnFactor\r\n    if (parseInt(taskInst.getProperty('completeness')) > 15) {\r\n        stepAdvance *= 1 - ((numberOfEmployeeOnNeedOnNewTask * (parseFloat(taskInst.getProperty('takeInHandDuration') / 100))) / affectedEmployeesDesc.length);//learnFactor \r\n    }\r\n\r\n    //calculate bonusRatio\r\n    stepAdvance *= (parseFloat(taskDesc.getProperty('bonusRatio')));\r\n\r\n    //calculate predecessorFactor\r\n    stepAdvance *= getPredecessorFactor(taskDesc); //predecessor factor\r\n\r\n    stepAdvance *= 100;\r\n\r\n    //calculate new needCompleteness\r\n    needProgress = Math.round(parseInt(selectedReq.getCompleteness()) + stepAdvance);\r\n\r\n    //calculate stepQuality\r\n    if (sumActivityRate !== 0) {\r\n        stepQuality = 1 + 0.03 * ((motivationXActivityRate / sumActivityRate) - 7); //Motivation quality\r\n        averageSkillsetQuality = (skillsetXActivityRate / sumActivityRate);\r\n        if (averageSkillsetQuality >= selectedReq.getLevel()) {\r\n            stepQuality += 1 + 0.02 * (averageSkillsetQuality - selectedReq.getLevel()); //skillset (level) quality\r\n        } else {\r\n            stepQuality += 1 + 0.03 * (averageSkillsetQuality - selectedReq.getLevel()); //skillset (level) quality\r\n        }\r\n    }\r\n    stepQuality = (stepQuality / 2) * 100; //step Quality\r\n    if (needProgress > 0) {\r\n        selectedReq.setQuality((parseInt(selectedReq.getQuality()) * parseInt(selectedReq.getCompleteness()) + stepQuality * stepAdvance) / needProgress);\r\n    }\r\n\r\n    //set Wage (add 1/steps of the need's wage at task);\r\n    taskInst.setProperty(\"wage\", parseInt(taskInst.getProperty(\"wage\")) + (parseInt(activityAsNeeds.getResourceInstance().getProperty(\"wage\")) / steps));\r\n\r\n    if (testMode) {\r\n        println('sameNeedActivity.length : ' + sameNeedActivity.length);\r\n        println('employeesMotivationFactor : ' + employeesMotivationFactor);\r\n        println('employeesMotivationXActivityRate : ' + employeesMotivationXActivityRate);\r\n        println('sumActivityRate : ' + sumActivityRate);\r\n        println('deltaLevel : ' + deltaLevel);\r\n        println('employeeSkillsetFactor : ' + employeeSkillsetFactor);\r\n        println('employeesSkillsetXActivityRate : ' + employeesSkillsetXActivityRate);\r\n        println('activityCoefficientXActivityRate : ' + activityCoefficientXActivityRate);\r\n        println('numberOfEmployeeOnNeedOnNewTask : ' + numberOfEmployeeOnNeedOnNewTask);\r\n        println('motivationXActivityRate: ' + motivationXActivityRate);\r\n        println('skillsetXActivityRate: ' + skillsetXActivityRate);\r\n        println('NeedMotivationFactor : ' + employeesMotivationXActivityRate / sumActivityRate);\r\n        println('NeedSkillsetFactor : ' + employeesMotivationXActivityRate / sumActivityRate);\r\n        println('ActivityNeedRateFactor : ' + activityCoefficientXActivityRate / sumActivityRate);\r\n        println('baseAdvance : ' + 1 / (steps * (parseInt(taskDesc.getInstance(self).getDuration()))));\r\n        println('numberOfRessourcesFactor : ' + correctedRessources / reqByWorks[workAs].totalOfEmployees);\r\n        println('otherWorkFactor : ' + otherWorkFactor);\r\n        println('randomFactor (not same value as used !) : ' + getRandomFactorFromTask(taskDesc));\r\n        println('learnFactor : ' + (1 - ((numberOfEmployeeOnNeedOnNewTask * (parseFloat(taskInst.getProperty('takeInHandDuration') / 100))) / affectedEmployeesDesc.length)));\r\n        println('bonusRatio : ' + parseFloat(taskDesc.getProperty('bonusRatio')));\r\n        println('predecessorFactor : ' + Math.pow((predecessorsAdvance / taskDesc.getPredecessors().size()) / 100, parseInt(taskInst.getProperty('predecessorsDependances')))); //predecessor factor);\r\n        println('stepAdvance : ' + stepAdvance);\r\n        println('need completeness : ' + parseInt(selectedReq.getCompleteness()));\r\n        println('needProgress : ' + needProgress);\r\n        println('StepQuality : ' + ((parseInt(selectedReq.getQuality()) * parseInt(selectedReq.getCompleteness()) + stepQuality * stepAdvance) / needProgress));\r\n    }\r\n\r\n    //set need progress (after calcuateQuality) and return it\r\n    selectedReq.setCompleteness(needProgress);\r\n    return  needProgress;\r\n}\r\n\r\nfunction getRandomFactorFromTask(taskDesc) {\r\n    var rn = Math.floor(Math.random() * 100), //number 0 to 100 (0 inclusive, 100 exclusive);\r\n            randomDurationSup = parseFloat(taskDesc.getProperty('randomDurationSup')),\r\n            randomDurationInf = parseFloat(taskDesc.getProperty('randomDurationInf')),\r\n            duration = parseInt(taskDesc.getInstance(self).getDuration()), delta,\r\n            randomFactor, x = Math.random();\r\n\r\n    switch (rn) {\r\n        case (rn < 3) :\r\n            delta = -(0.25 * x + 0.75) * randomDurationInf;\r\n            break;\r\n        case (rn < 10) :\r\n            delta = -(0.25 * x + 0.50) * randomDurationInf;\r\n            break;\r\n        case (rn < 25) :\r\n            delta = -(0.25 * x + 0.25) * randomDurationInf;\r\n            break;\r\n        case (rn < 50) :\r\n            delta = -0.25 * x * randomDurationInf;\r\n            break;\r\n        case (rn < 75) :\r\n            delta = 0.25 * x * randomDurationSup;\r\n            break;\r\n        case (rn < 90) :\r\n            delta = (0.25 * x + 0.25) * randomDurationSup;\r\n            break;\r\n        case (rn < 97) :\r\n            delta = (0.25 * x + 0.50) * randomDurationSup;\r\n            break;\r\n        default :\r\n            delta = (0.25 * x + 0.75) * randomDurationSup;\r\n            break;\r\n    }\r\n\r\n    randomFactor = duration + delta;\r\n\r\n    if (randomFactor < minTaskDuration) {\r\n        randomFactor = minTaskDuration;\r\n    }\r\n\r\n    return getFloat((duration / randomFactor), 2);\r\n}\r\n\r\nfunction calculateTaskQuality(taskDesc) {\r\n    var i, req, needQualityXNeedProgress = 0, needProgress = 0;\r\n    for (i = 0; i < taskDesc.getInstance(self).getRequirements().size(); i++) {\r\n        req = taskDesc.getInstance(self).getRequirements().get(i);\r\n        needQualityXNeedProgress += (parseInt(req.getQuality()) * parseInt(req.getCompleteness()));\r\n        needProgress += parseInt(req.getCompleteness());\r\n    }\r\n    return Math.round((needQualityXNeedProgress / needProgress));\r\n}\r\n\r\n\r\nfunction tempInit() {\r\n    var occupation, listEmployees = flattenList(VariableDescriptorFacade.findByName(gm, 'employees')),\r\n            listTasks = VariableDescriptorFacade.findByName(gm, 'tasks');\r\n\r\n    occupation = listEmployees[0].getInstance(self).addOccupation();\r\n    occupation.setTime(1.0);\r\n    occupation = listEmployees[0].getInstance(self).addOccupation();\r\n    occupation.setTime(2.0);\r\n    occupation = listEmployees[1].getInstance(self).addOccupation();\r\n    occupation.setTime(1.0);\r\n    occupation = listEmployees[2].getInstance(self).addOccupation();\r\n    occupation.setTime(2.0);\r\n    occupation = listEmployees[2].getInstance(self).addOccupation();\r\n    occupation.setTime(3.0);\r\n    occupation.setEditable(false);\r\n\r\n    //listTasks.items.get(0).getPredecessors().add(listTasks.items.get(1));\r\n\r\n    listEmployees[1].getInstance(self).assign(listTasks.items.get(0));\r\n    listEmployees[0].getInstance(self).assign(listTasks.items.get(1));\r\n\r\n    return 'is initialized';\r\n}\r\n\r\nfunction getCurrentInGameTime() {\r\n    var inGameTime = {phase: null, period: null},\r\n    phases = VariableDescriptorFacade.findByName(gm, 'currentPeriod');\r\n    inGameTime.phase = parseInt(currentPhase.value);\r\n    if (phases !== null && inGameTime.phase !== null) {\r\n        inGameTime.period = parseInt(phases.items.get(inGameTime.phase).getInstance(self).value);\r\n    }\r\n    return inGameTime;\r\n}\r\n\r\nfunction isTrue(arg) {\r\n    return (arg == true || arg == 'true') ? true : false;\r\n}\r\n\r\nfunction getFloat(number, numberOfDigit) {\r\n    numberOfDigit = Math.pow(10, (numberOfDigit > 1) ? numberOfDigit : 1);\r\n    return Math.round(number * numberOfDigit) / numberOfDigit;\r\n}\r\n\r\nfunction flattenList(list, finalList) {\r\n    var i, el;\r\n    finalList = (finalList) ? finalList : [];\r\n    for (i = 0; i < list.items.size(); i++) {\r\n        el = list.items.get(i);\r\n        if (el.getClass() && el.getClass().toString() == 'class com.wegas.core.persistence.variable.ListDescriptor') {\r\n            finalList = this.flattenList(el, finalList);\r\n        } else {\r\n            finalList.push(el);\r\n        }\r\n    }\r\n    return finalList;\r\n}\r\nfunction checkEnd(allCurrentActivities, currentStep) {\r\n    var i, employeeInst, taskInst, taskDesc, employeeName, employeeJob,\r\n            nextWork, reqByWorks;\r\n    for (i = 0; i < allCurrentActivities.length; i++) {\r\n        taskDesc = allCurrentActivities[i].getTaskDescriptor();\r\n        taskInst = taskDesc.getInstance(self);\r\n        employeeInst = allCurrentActivities[i].getResourceInstance();\r\n        employeeName = employeeInst.getDescriptor().getLabel();\r\n        employeeJob = employeeInst.getSkillsets().keySet().toArray()[0];\r\n        if (currentStep === steps - 1) {\r\n            checkAssignments(employeeInst.getAssignments(), currentStep);\r\n        } else if (parseFloat(taskInst.getProperty('completeness')) < 100) {\r\n            reqByWorks = getRequirementsByWork(taskInst.getRequirements());\r\n            nextWork = selectFirstUncompletedWork(taskInst.getRequirements(), reqByWorks);\r\n            if (allCurrentActivities[i].getRequirement().getWork() != nextWork) {\r\n                sendMessage(getStepName(currentStep) + ') Tâche : ' + taskDesc.getLabel() + ' en partie terminée',\r\n                        'Nous avons terminé la partie ' + allCurrentActivities[i].getRequirement().getWork() + ' de la tâche ' + taskDesc.getLabel() + '. Je passe à ' + nextWork + '. <br/> Salutations <br/>' + employeeName + '<br/> ' + employeeJob,\r\n                        employeeName);\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n\r\nfunction getStepName(step) {\r\n    var name;\r\n    switch (step) {\r\n        case 0 :\r\n            name = 'Lundi matin';\r\n            break;\r\n        case 1 :\r\n            name = 'Lundi après-midi';\r\n            break;\r\n        case 2 :\r\n            name = 'Mardi matin';\r\n            break;\r\n        case 3 :\r\n            name = 'Mardi après-midi';\r\n            break;\r\n        case 4 :\r\n            name = 'Mercredi matin';\r\n            break;\r\n        case 5 :\r\n            name = 'Mercredi après-midi';\r\n            break;\r\n        case 6 :\r\n            name = 'Jeudi matin';\r\n            break;\r\n        case 7 :\r\n            name = 'Jeudi après-midi';\r\n            break;\r\n        case 8 :\r\n            name = 'Vendredi matin';\r\n            break;\r\n        case 9 :\r\n            name = 'Vendredi après-midi';\r\n            break;\r\n        default :\r\n            name = 'samedi matin';\r\n    }\r\n    return name;\r\n}\r\n\r\n/**\r\n * get the specified wegas bean.\r\n * @param String name, the name of the bean\r\n * @return the wanted bean or null\r\n */\r\nfunction lookupBean(name) {\r\n    var ctx = new InitialContext();\r\n    return ctx.lookup('java:module/' + name);\r\n}\r\n\r\n/**\r\n * Send a message to the current player.\r\n * @param String subject, the subject of the message.\r\n * @param String message, the content of the message.\r\n * @param String from, the sender of the message.\r\n */\r\nfunction sendMessage(subject, content, from) {\r\n    var EF = lookupBean('MessageFacade');\r\n    if (EF) {\r\n        EF.send(self, subject, content, from);\r\n    }\r\n    else {\r\n        println('Bean InGameMailFacade does not exist, unable to send in-game message: ' + subject);\r\n    }\r\n}\r\n\r\n"
        }
    },
    "cssLibrary": {},
    "clientScriptLibrary": {
        "default": {
            "@class": "GameModelContent",
            "content": "Y.Wegas.persistence.ListDescriptor.EDITMENU[1].plugins[0].cfg.children.push({type:\"AddEntityChildButton\",label:\"Resource\",targetClass:\"ResourceDescriptor\"}, {type:\"AddEntityChildButton\",label:\"Task\",targetClass:\"TaskDescriptor\"});\nY.Wegas.persistence.TaskDescriptor.METHODS.getNumberInstanceProperty = {\n                label: \"Get number instance's property\",\n                returns: \"number\",\n                arguments: [{\n                        type: \"hidden\",\n                        value: \"self\"\n                    }, {\n                        label: \"Key\",\n                        scriptType: \"string\",\n                        type: \"select\",\n                        choices: [{\n                                value: \"fixedCosts\"\n                            }, {\n                                value: \"wages\"\n                            },{\n                                value: \"bac\"\n                            },{\n                                value: \"unworkedHoursCosts\"\n                            },{\n                                value: \"predecessorsDependances\"\n                            },{\n                                value: \"quality\"\n                            },{\n                                value: \"completeness\"\n                            }]\n                    }]\n            }\nY.Wegas.persistence.ResourceDescriptor.METHODS.getNumberInstanceProperty = {\n                label: \"Get number instance's property\",\n                returns: \"number\",\n                arguments: [{\n                        type: \"hidden\",\n                        value: \"self\"\n                    }, {\n                        label: \"Key\",\n                        scriptType: \"string\",\n                        type: \"select\",\n                        choices: [{\n                                value: \"activityRate\"\n                            }, {\n                                value: \"wage\"\n                            }]\n                    }]\n            }"
        }
    },
    "properties": {
        "pagesUri": "wegas-pmg/db/wegas-pmg-pages.json?",
        "cssUri": "wegas-pmg/css/wegas-pmg.css"
    },
    "canEdit": true,
    "canInstantiate": true,
    "canDuplicate": true
}